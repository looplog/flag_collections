<?php

/**
 * Implementation of hook_ctools_plugin_api().
 */
function flag_collections_rules_ctools_plugin_api() {
  list($module, $api) = func_get_args();
  if ($module == "strongarm" && $api == "strongarm") {
    return array("version" => 1);
  }
}

/**
 * Implementation of hook_rules_defaults().
 */
function flag_collections_rules_rules_defaults() {
  return array(
    'rules' => array(
      'flag_collections_rules_1' => array(
        '#type' => 'rule',
        '#set' => 'event_node_insert',
        '#label' => 'create flag view and rules on new loop creation',
        '#active' => 1,
        '#weight' => '0',
        '#categories' => array(
          '0' => 'core',
          'flag_collections_rules' => 'flag_collections_rules',
        ),
        '#status' => 'default',
        '#conditions' => array(
          '0' => array(
            '#weight' => 0,
            '#info' => array(
              'label' => 'Created content is Loop',
              'arguments' => array(
                'node' => array(
                  'type' => 'node',
                  'label' => 'Content',
                ),
              ),
              'module' => 'Node',
            ),
            '#name' => 'rules_condition_content_is_type',
            '#settings' => array(
              'type' => array(
                'loop' => 'loop',
              ),
              '#argument map' => array(
                'node' => 'node',
              ),
            ),
            '#type' => 'condition',
          ),
        ),
        '#actions' => array(
          '0' => array(
            '#type' => 'action',
            '#settings' => array(
              'code' => '$newflagname = \'loopflag\'.$node->nid;
$newflagtitle = $node->title;

$flag = flag_flag::factory_by_content_type(\'node\');
    $configuration = array(
      \'name\' => $newflagname,
      \'global\' =>1,
      \'show_on_page\' => 0,
      \'show_on_teaser\' => 0,
      \'show_on_form\' => 1,
      // The following UI labels aren\'t wrapped in t() because they are written
      // to the DB in English. They are passed to t() later, thus allowing for
      // multilingual sites.
      \'title\' => $newflagtitle,
      \'flag_short\' => \'Clone and add to \'.$newflagtitle,
      \'flag_long\' => \'Clone and add to \'.$newflagtitle,
      \'flag_message\' => \'Content processed in \'.$newflagtitle,
      \'unflag_short\' => \'Remove from \'.$newflagtitle,
      \'unflag_long\' => \'Remove from \'.$newflagtitle,
      \'unflag_message\' => \'Content processed in \'.$newflagtitle,
      \'types\' => array(
        0 => \'video\',
        1 => \'text\',
        2 => \'task\',
        3 => \'place\',
        4 => \'media\',
        5 => \'link\',
        6 => \'image\',
        7 => \'file\',
        8 => \'event\',
        9 => \'audio\'
      ),
      \'roles\' => array (
        \'flag\' => array (
          0 => 4,
        ),
        \'unflag\' => array (
          0 => 4,
        ),
      ),
    );
    $flag->form_input($configuration);
    $flag->save();
 ',
              'vars' => array(
                '0' => 'node',
              ),
            ),
            '#name' => 'rules_action_custom_php',
            '#info' => array(
              'label' => 'Create Flag',
              'label callback' => FALSE,
              'module' => 'PHP',
              'eval input' => array(
                '0' => 'code',
              ),
            ),
            '#weight' => 0,
          ),
          '1' => array(
            '#weight' => 0,
            '#type' => 'action',
            '#settings' => array(
              'code' => '
$section = $node->field_loop_section[0][\'value\'];
//drupal_set_message($section, \'status\');
$newflagname = \'loopflag\'.$node->nid;
$newflagtitle = $node->title;
//$basepath = drupal_get_path_alias("node/$node->nid");
$basepath = $section.\'/\'. $node->nid;
$basemenu = \'menu-\' . $section;


$view = views_new_view();



//define the view (this code was generated by the Export)
$view = new view;
$view->name = $newflagname;
$view->description = \'Alternate displays for content collected in \' . $newflagname;
$view->tag = \'flag\';
$view->view_php = \'\';
$view->base_table = \'node\';
$view->is_cacheable = FALSE;
$view->api_version = 2;
$view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */



$handler = $view->new_display(\'default\', \'Defaults\', \'default\');

$handler->override_option(\'relationships\', array(
  \'flag_content_rel\' => array(
    \'label\' => \'bookmarks\',
    \'required\' => 1,
    \'flag\' => $newflagname,
    \'user_scope\' => \'any\',
    \'id\' => \'flag_content_rel\',
    \'table\' => \'node\',
    \'field\' => \'flag_content_rel\',
    \'relationship\' => \'none\',
    \'override\' => array(
      \'button\' => \'Override\',
    ),
  ),
  \'field_text_ref_biblio_nid\' => array(
    \'label\' => \'Reference\',
    \'required\' => 0,
    \'delta\' => \'-1\',
    \'id\' => \'field_text_ref_biblio_nid\',
    \'table\' => \'node_data_field_text_ref_biblio\',
    \'field\' => \'field_text_ref_biblio_nid\',
    \'relationship\' => \'none\',
  ),
));


$handler->override_option(\'fields\', array(
  \'title\' => array(
    \'id\' => \'title\',
    \'table\' => \'node\',
    \'field\' => \'title\',
  ),
));

$handler->override_option(\'sorts\', array(
  \'value0\' => array(
    \'order\' => \'ASC\',
    \'id\' => \'value0\',
    \'table\' => \'draggableviews_structure_node0\',
    \'field\' => \'value0\',
    \'override\' => array(
      \'button\' => \'Override\',
    ),
    \'relationship\' => \'none\',
  ),
));

$handler->override_option(\'cache\', array(
  \'type\' => \'none\',
));

$handler->override_option(\'title\', $newflagtitle);
$handler->override_option(\'header_format\', \'2\');
$handler->override_option(\'header_empty\', 1);
$handler->override_option(\'empty\', \'Nothing in the loop...\');
$handler->override_option(\'use_ajax\', TRUE);
$handler->override_option(\'items_per_page\', 0);
$handler->override_option(\'use_pager\', \'0\');
$handler->override_option(\'distinct\', 1);
$handler->override_option(\'style_plugin\', \'bulk\');
$handler->override_option(\'style_options\', array(
  \'grouping\' => \'\',
  \'override\' => 1,
  \'sticky\' => 0,
  \'order\' => \'asc\',
  \'columns\' => array(
    \'title\' => \'title\',
  ),
  \'info\' => array(
    \'title\' => array(
      \'sortable\' => 0,
      \'separator\' => \'\',
    ),
  ),
  \'default\' => \'-1\',
  \'execution_type\' => \'1\',
  \'display_type\' => \'0\',
  \'hide_select_all\' => 0,
  \'skip_confirmation\' => 0,
  \'display_result\' => 1,
  \'merge_single_action\' => 1,
  \'selected_operations\' => array(
    \'node_publish_action\' => \'node_publish_action\',
    \'node_unpublish_action\' => \'node_unpublish_action\',
    \'views_bulk_operations_fields_action\' => \'views_bulk_operations_fields_action\',
  ),
  \'views_bulk_operations_fields_action\' => array(
    \'php_code\' => 0,
    \'display_fields\' => array(
      \'field_loop_mode\' => \'field_loop_mode\',
    ),
    \'_error_element_base\' => \'style_options][views_bulk_operations_fields_action][\',
  ),
));







$handler = $view->new_display(\'page\', \'View Page (Writer)\', \'page_1\');
$handler->override_option(\'fields\', array(
  \'nid\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'exclude\' => 1,
    \'id\' => \'nid\',
    \'table\' => \'node\',
    \'field\' => \'nid\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'field_text_notes_value\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 1,
      \'text\' => \'<br></br><A name="[nid]"></A>[field_text_notes_value]\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'label_type\' => \'none\',
    \'format\' => \'default\',
    \'multiple\' => array(
      \'group\' => TRUE,
      \'multiple_number\' => \'\',
      \'multiple_from\' => \'\',
      \'multiple_reversed\' => FALSE,
    ),
    \'exclude\' => 0,
    \'id\' => \'field_text_notes_value\',
    \'table\' => \'node_data_field_text_notes\',
    \'field\' => \'field_text_notes_value\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'field_audio_file_fid\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'label_type\' => \'none\',
    \'format\' => \'audiofield_embedded\',
    \'multiple\' => array(
      \'group\' => TRUE,
      \'multiple_number\' => \'\',
      \'multiple_from\' => \'\',
      \'multiple_reversed\' => FALSE,
    ),
    \'exclude\' => 0,
    \'id\' => \'field_audio_file_fid\',
    \'table\' => \'node_data_field_audio_file\',
    \'field\' => \'field_audio_file_fid\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'field_image_fid\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'label_type\' => \'none\',
    \'format\' => \'imagefield__lightbox2__thumbnail__original\',
    \'multiple\' => array(
      \'group\' => TRUE,
      \'multiple_number\' => \'\',
      \'multiple_from\' => \'\',
      \'multiple_reversed\' => FALSE,
    ),
    \'exclude\' => 0,
    \'id\' => \'field_image_fid\',
    \'table\' => \'node_data_field_image\',
    \'field\' => \'field_image_fid\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'field_link_url\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'label_type\' => \'none\',
    \'format\' => \'default\',
    \'multiple\' => array(
      \'group\' => TRUE,
      \'multiple_number\' => \'\',
      \'multiple_from\' => \'\',
      \'multiple_reversed\' => FALSE,
    ),
    \'exclude\' => 0,
    \'id\' => \'field_link_url\',
    \'table\' => \'node_data_field_link\',
    \'field\' => \'field_link_url\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'links\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'exclude\' => 0,
    \'id\' => \'links\',
    \'table\' => \'eazyedit\',
    \'field\' => \'links\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'nid_1\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 1,
      \'text\' => \'add feedback\',
      \'make_link\' => 1,
      \'path\' => \'node/[nid_1]/feedback\',
      \'link_class\' => \'automodal\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'exclude\' => 1,
    \'id\' => \'nid_1\',
    \'table\' => \'node\',
    \'field\' => \'nid\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'nid_2\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 1,
      \'text\' => \'edit\',
      \'make_link\' => 1,
      \'path\' => \'node/[nid_2]/edit\',
      \'link_class\' => \'automodal\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'exclude\' => 1,
    \'id\' => \'nid_2\',
    \'table\' => \'node\',
    \'field\' => \'nid\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'ops\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_type\' => \'toggle\',
    \'exclude\' => 1,
    \'id\' => \'ops\',
    \'table\' => \'flag_content\',
    \'field\' => \'ops\',
    \'relationship\' => \'flag_content_rel\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
  ),
  \'nothing\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'text\' => \'[nid_1] | [nid_2] | [ops]\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'exclude\' => 0,
    \'id\' => \'nothing\',
    \'table\' => \'views\',
    \'field\' => \'nothing\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
));

$handler->override_option(\'access\', array(
  \'type\' => \'role\',
  \'role\' => array(
    \'4\' => 4,
  ),
));

$handler->override_option(\'style_plugin\', \'semanticviews_default\');
$handler->override_option(\'style_options\', array(
  \'grouping\' => \'\',
  \'group\' => array(
    \'element_type\' => \'h3\',
    \'class\' => \'title\',
  ),
  \'list\' => array(
    \'element_type\' => \'\',
    \'class\' => \'\',
  ),
  \'row\' => array(
    \'element_type\' => \'div\',
    \'class\' => \'\',
    \'last_every_nth\' => \'0\',
    \'first_class\' => \'first\',
    \'last_class\' => \'last\',
    \'striping_classes\' => \'odd even\',
  ),
));
$handler->override_option(\'row_plugin\', \'semanticviews_fields\');
$handler->override_option(\'row_options\', array(
  \'semantic_html\' => array(
    \'field_text_notes_value\' => array(
      \'element_type\' => \'p\',
      \'class\' => \'\',
    ),
    \'field_audio_file_fid\' => array(
      \'element_type\' => \'p\',
      \'class\' => \'\',
    ),
    \'field_image_fid\' => array(
      \'element_type\' => \'p\',
      \'class\' => \'\',
    ),
    \'field_link_url\' => array(
      \'element_type\' => \'p\',
      \'class\' => \'\',
    ),
    \'links\' => array(
      \'element_type\' => \'p\',
      \'class\' => \'\',
    ),
    \'nothing\' => array(
      \'element_type\' => \'div\',
      \'class\' => \'eazyedit eazyedit-node\',
    ),
  ),
  \'skip_blank\' => 1,
));

$handler->override_option(\'path\', $basepath);
$handler->override_option(\'menu\', array(
  \'type\' => \'normal\',
  \'title\' => $newflagtitle,
  \'description\' => \'\',
  \'weight\' => \'0\',
  \'name\' => \'navigation\',
));
$handler->override_option(\'tab_options\', array(
  \'type\' => \'none\',
  \'title\' => \'\',
  \'description\' => \'\',
  \'weight\' => \'\',
  \'name\' => \'navigation\',
));




$handler = $view->new_display(\'page\', \'View Page (Supervisor)\', \'page_2\');
$handler->override_option(\'fields\', array(
  \'nid\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'exclude\' => 1,
    \'id\' => \'nid\',
    \'table\' => \'node\',
    \'field\' => \'nid\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'field_text_notes_value\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 1,
      \'text\' => \'<br></br><A name="[nid]"></A>[field_text_notes_value]\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'label_type\' => \'none\',
    \'format\' => \'default\',
    \'multiple\' => array(
      \'group\' => TRUE,
      \'multiple_number\' => \'\',
      \'multiple_from\' => \'\',
      \'multiple_reversed\' => FALSE,
    ),
    \'exclude\' => 0,
    \'id\' => \'field_text_notes_value\',
    \'table\' => \'node_data_field_text_notes\',
    \'field\' => \'field_text_notes_value\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'field_audio_file_fid\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'label_type\' => \'none\',
    \'format\' => \'audiofield_embedded\',
    \'multiple\' => array(
      \'group\' => TRUE,
      \'multiple_number\' => \'\',
      \'multiple_from\' => \'\',
      \'multiple_reversed\' => FALSE,
    ),
    \'exclude\' => 0,
    \'id\' => \'field_audio_file_fid\',
    \'table\' => \'node_data_field_audio_file\',
    \'field\' => \'field_audio_file_fid\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'field_image_fid\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'label_type\' => \'none\',
    \'format\' => \'imagefield__lightbox2__thumbnail__original\',
    \'multiple\' => array(
      \'group\' => TRUE,
      \'multiple_number\' => \'\',
      \'multiple_from\' => \'\',
      \'multiple_reversed\' => FALSE,
    ),
    \'exclude\' => 0,
    \'id\' => \'field_image_fid\',
    \'table\' => \'node_data_field_image\',
    \'field\' => \'field_image_fid\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'field_link_url\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'label_type\' => \'none\',
    \'format\' => \'default\',
    \'multiple\' => array(
      \'group\' => TRUE,
      \'multiple_number\' => \'\',
      \'multiple_from\' => \'\',
      \'multiple_reversed\' => FALSE,
    ),
    \'exclude\' => 0,
    \'id\' => \'field_link_url\',
    \'table\' => \'node_data_field_link\',
    \'field\' => \'field_link_url\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'links\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'exclude\' => 0,
    \'id\' => \'links\',
    \'table\' => \'eazyedit\',
    \'field\' => \'links\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'nid_1\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 1,
      \'text\' => \'add feedback\',
      \'make_link\' => 1,
      \'path\' => \'node/[nid_1]/feedback\',
      \'link_class\' => \'automodal\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'exclude\' => 1,
    \'id\' => \'nid_1\',
    \'table\' => \'node\',
    \'field\' => \'nid\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'nid_2\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 1,
      \'text\' => \'view feedback\',
      \'make_link\' => 1,
      \'path\' => \'node/[nid_2]/feedbacklist\',
      \'link_class\' => \'automodal viewfeedback\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'exclude\' => 1,
    \'id\' => \'nid_2\',
    \'table\' => \'node\',
    \'field\' => \'nid\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'nothing\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'text\' => \'[nid_1] | [nid_2]\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'exclude\' => 0,
    \'id\' => \'nothing\',
    \'table\' => \'views\',
    \'field\' => \'nothing\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
));

$handler->override_option(\'filters\', array(
  \'field_loop_mode_value_many_to_one\' => array(
    \'operator\' => \'or\',
    \'value\' => array(
      \'feedback\' => \'feedback\',
      \'spin\' => \'spin\',
      \'circulation\' => \'circulation\',
    ),
    \'group\' => \'0\',
    \'exposed\' => FALSE,
    \'expose\' => array(
      \'operator\' => FALSE,
      \'label\' => \'\',
    ),
    \'id\' => \'field_loop_mode_value_many_to_one\',
    \'table\' => \'node_data_field_loop_mode\',
    \'field\' => \'field_loop_mode_value_many_to_one\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
    \'reduce_duplicates\' => 0,
  ),
));

$handler->override_option(\'access\', array(
  \'type\' => \'role\',
  \'role\' => array(
    \'3\' => 3,
  ),
));

$handler->override_option(\'style_plugin\', \'semanticviews_default\');
$handler->override_option(\'style_options\', array(
  \'grouping\' => \'\',
  \'group\' => array(
    \'element_type\' => \'h3\',
    \'class\' => \'title\',
  ),
  \'list\' => array(
    \'element_type\' => \'\',
    \'class\' => \'\',
  ),
  \'row\' => array(
    \'element_type\' => \'div\',
    \'class\' => \'\',
    \'last_every_nth\' => \'0\',
    \'first_class\' => \'first\',
    \'last_class\' => \'last\',
    \'striping_classes\' => \'odd even\',
  ),
));
$handler->override_option(\'row_plugin\', \'semanticviews_fields\');
$handler->override_option(\'row_options\', array(
  \'semantic_html\' => array(
    \'field_text_notes_value\' => array(
      \'element_type\' => \'p\',
      \'class\' => \'\',
    ),
    \'field_audio_file_fid\' => array(
      \'element_type\' => \'p\',
      \'class\' => \'\',
    ),
    \'field_image_fid\' => array(
      \'element_type\' => \'p\',
      \'class\' => \'\',
    ),
    \'field_link_url\' => array(
      \'element_type\' => \'p\',
      \'class\' => \'\',
    ),
    \'links\' => array(
      \'element_type\' => \'p\',
      \'class\' => \'\',
    ),
    \'nothing\' => array(
      \'element_type\' => \'div\',
      \'class\' => \'eazyedit eazyedit-node\',
    ),
  ),
  \'skip_blank\' => 1,
));
$handler->override_option(\'path\', $basepath);
$handler->override_option(\'menu\', array(
  \'type\' => \'normal\',
  \'title\' => $newflagtitle,
  \'description\' => \'\',
  \'weight\' => \'0\',
  \'name\' => \'navigation\',
));
$handler->override_option(\'tab_options\', array(
  \'type\' => \'none\',
  \'title\' => \'\',
  \'description\' => \'\',
  \'weight\' => \'\',
  \'name\' => \'navigation\',
));






$handler = $view->new_display(\'page\', \'View Page (Anon)\', \'page_3\');
$handler->override_option(\'fields\', array(
  \'nid\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'exclude\' => 1,
    \'id\' => \'nid\',
    \'table\' => \'node\',
    \'field\' => \'nid\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'field_text_notes_value\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 1,
      \'text\' => \'<br></br><A name="[nid]"></A>[field_text_notes_value]\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'label_type\' => \'none\',
    \'format\' => \'default\',
    \'multiple\' => array(
      \'group\' => TRUE,
      \'multiple_number\' => \'\',
      \'multiple_from\' => \'\',
      \'multiple_reversed\' => FALSE,
    ),
    \'exclude\' => 0,
    \'id\' => \'field_text_notes_value\',
    \'table\' => \'node_data_field_text_notes\',
    \'field\' => \'field_text_notes_value\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'field_audio_file_fid\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'label_type\' => \'none\',
    \'format\' => \'audiofield_embedded\',
    \'multiple\' => array(
      \'group\' => TRUE,
      \'multiple_number\' => \'\',
      \'multiple_from\' => \'\',
      \'multiple_reversed\' => FALSE,
    ),
    \'exclude\' => 0,
    \'id\' => \'field_audio_file_fid\',
    \'table\' => \'node_data_field_audio_file\',
    \'field\' => \'field_audio_file_fid\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'field_image_fid\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'label_type\' => \'none\',
    \'format\' => \'imagefield__lightbox2__thumbnail__original\',
    \'multiple\' => array(
      \'group\' => TRUE,
      \'multiple_number\' => \'\',
      \'multiple_from\' => \'\',
      \'multiple_reversed\' => FALSE,
    ),
    \'exclude\' => 0,
    \'id\' => \'field_image_fid\',
    \'table\' => \'node_data_field_image\',
    \'field\' => \'field_image_fid\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'field_link_url\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'label_type\' => \'none\',
    \'format\' => \'default\',
    \'multiple\' => array(
      \'group\' => TRUE,
      \'multiple_number\' => \'\',
      \'multiple_from\' => \'\',
      \'multiple_reversed\' => FALSE,
    ),
    \'exclude\' => 0,
    \'id\' => \'field_link_url\',
    \'table\' => \'node_data_field_link\',
    \'field\' => \'field_link_url\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
));

$handler->override_option(\'filters\', array(
  \'field_loop_mode_value_many_to_one\' => array(
    \'operator\' => \'or\',
    \'value\' => array(
      \'circulation\' => \'circulation\',
    ),
    \'group\' => \'0\',
    \'exposed\' => FALSE,
    \'expose\' => array(
      \'operator\' => FALSE,
      \'label\' => \'\',
    ),
    \'id\' => \'field_loop_mode_value_many_to_one\',
    \'table\' => \'node_data_field_loop_mode\',
    \'field\' => \'field_loop_mode_value_many_to_one\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
    \'reduce_duplicates\' => 0,
  ),
));

$handler->override_option(\'access\', array(
  \'type\' => \'role\',
  \'role\' => array(
    \'1\' => 1,
  ),
));

$handler->override_option(\'style_plugin\', \'semanticviews_default\');
$handler->override_option(\'style_options\', array(
  \'grouping\' => \'\',
  \'group\' => array(
    \'element_type\' => \'h3\',
    \'class\' => \'title\',
  ),
  \'list\' => array(
    \'element_type\' => \'\',
    \'class\' => \'\',
  ),
  \'row\' => array(
    \'element_type\' => \'div\',
    \'class\' => \'\',
    \'last_every_nth\' => \'0\',
    \'first_class\' => \'first\',
    \'last_class\' => \'last\',
    \'striping_classes\' => \'odd even\',
  ),
));
$handler->override_option(\'row_plugin\', \'semanticviews_fields\');
$handler->override_option(\'row_options\', array(
  \'semantic_html\' => array(
    \'field_text_notes_value\' => array(
      \'element_type\' => \'p\',
      \'class\' => \'\',
    ),
    \'field_audio_file_fid\' => array(
      \'element_type\' => \'p\',
      \'class\' => \'\',
    ),
    \'field_image_fid\' => array(
      \'element_type\' => \'p\',
      \'class\' => \'\',
    ),
    \'field_link_url\' => array(
      \'element_type\' => \'p\',
      \'class\' => \'\',
    ),
    \'links\' => array(
      \'element_type\' => \'p\',
      \'class\' => \'\',
    ),
  ),
  \'skip_blank\' => 1,
));

$handler->override_option(\'path\', $basepath);
$handler->override_option(\'menu\', array(
  \'type\' => \'normal\',
  \'title\' => $newflagtitle,
  \'description\' => \'\',
  \'weight\' => \'0\',
  \'name\' => \'navigation\',
));
$handler->override_option(\'tab_options\', array(
  \'type\' => \'none\',
  \'title\' => \'\',
  \'description\' => \'\',
  \'weight\' => \'\',
  \'name\' => \'navigation\',
));





$handler = $view->new_display(\'page\', \'Menu Placeholder Page\', \'page_4\');
$handler->override_option(\'access\', array(
  \'type\' => \'role\',
  \'role\' => array(
    \'1\' => 1,
    \'3\' => 3,
    \'4\' => 4,
  ),
));
$handler->override_option(\'path\', $basepath . \'/default\');
$handler->override_option(\'menu\', array(
  \'type\' => \'default tab\',
  \'title\' => \'View\',
  \'description\' => \'\',
  \'weight\' => \'0\',
  \'name\' => \'navigation\',
));
$handler->override_option(\'tab_options\', array(
  \'type\' => \'none\',
  \'title\' => \'\',
  \'description\' => \'\',
  \'weight\' => \'0\',
  \'name\' => \'navigation\',
));

$handler = $view->new_display(\'page\', \'Outliner Page\', \'page_5\');
// $handler->override_option(\'header\', \'This is the third page display\');
// $handler->override_option(\'header_format\', \'1\');
//$handler->override_option(\'header_empty\', 1);


$handler->override_option(\'fields\', array(
  \'nothing\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'exclude\' => 0,
    \'id\' => \'nothing\',
    \'table\' => \'views\',
    \'field\' => \'nothing\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'title\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'exclude\' => 0,
    \'id\' => \'title\',
    \'table\' => \'node\',
    \'field\' => \'title\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'value0\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'exclude\' => 0,
    \'id\' => \'value0\',
    \'table\' => \'draggableviews_structure_node0\',
    \'field\' => \'value0\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'value1\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'exclude\' => 0,
    \'id\' => \'value1\',
    \'table\' => \'draggableviews_structure_node1\',
    \'field\' => \'value1\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'ops\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_type\' => \'\',
    \'exclude\' => 0,
    \'id\' => \'ops\',
    \'table\' => \'flag_content\',
    \'field\' => \'ops\',
    \'relationship\' => \'flag_content_rel\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
  ),
  \'field_text_notes_value\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'label_type\' => \'none\',
    \'format\' => \'editable\',
    \'multiple\' => array(
      \'group\' => TRUE,
      \'multiple_number\' => \'\',
      \'multiple_from\' => \'\',
      \'multiple_reversed\' => FALSE,
    ),
    \'exclude\' => 1,
    \'id\' => \'field_text_notes_value\',
    \'table\' => \'node_data_field_text_notes\',
    \'field\' => \'field_text_notes_value\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'field_text_notes_peekaboo_field\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'label_type\' => \'none\',
    \'format\' => \'default\',
    \'multiple\' => array(
      \'group\' => TRUE,
      \'multiple_number\' => \'\',
      \'multiple_from\' => \'\',
      \'multiple_reversed\' => FALSE,
    ),
    \'exclude\' => 0,
    \'id\' => \'field_text_notes_peekaboo_field\',
    \'table\' => \'node_data_field_text_notes_peekaboo\',
    \'field\' => \'field_text_notes_peekaboo_field\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
));
$handler->override_option(\'sorts\', array(
  \'value0\' => array(
    \'order\' => \'ASC\',
    \'id\' => \'value0\',
    \'table\' => \'draggableviews_structure_node0\',
    \'field\' => \'value0\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
));


$handler->override_option(\'access\', array(
  \'type\' => \'role\',
  \'role\' => array(
    \'4\' => 4,
  ),
));

$handler->override_option(\'style_plugin\', \'draggabletable\');
$handler->override_option(\'style_options\', array(
  \'override\' => 1,
  \'sticky\' => 0,
  \'order\' => \'asc\',
  \'columns\' => array(
    \'nothing\' => \'nothing\',
    \'title\' => \'title\',
    \'value0\' => \'value0\',
    \'value1\' => \'value1\',
    \'ops\' => \'title\',
    \'field_text_notes_value\' => \'title\',
    \'field_text_notes_peekaboo_field\' => \'title\',
  ),
  \'info\' => array(
    \'nothing\' => array(
      \'separator\' => \'\',
    ),
    \'title\' => array(
      \'sortable\' => 0,
      \'separator\' => \'\',
    ),
    \'value0\' => array(
      \'sortable\' => 0,
      \'separator\' => \'\',
    ),
    \'value1\' => array(
      \'separator\' => \'\',
    ),
    \'ops\' => array(
      \'separator\' => \'\',
    ),
    \'field_text_notes_value\' => array(
      \'sortable\' => 0,
      \'separator\' => \'\',
    ),
    \'field_text_notes_peekaboo_field\' => array(
      \'separator\' => \'\',
    ),
  ),
  \'default\' => \'-1\',
  \'tabledrag_hierarchy\' => array(
    \'field\' => \'value1\',
    \'handler\' => \'native\',
  ),
  \'tabledrag_order\' => array(
    \'field\' => \'value0\',
    \'handler\' => \'native\',
  ),
  \'draggableviews_extensions\' => array(
    \'extension_top\' => \'3\',
    \'extension_bottom\' => \'3\',
  ),
  \'tabledrag_order_visible\' => array(
    \'visible\' => 0,
  ),
  \'tabledrag_hierarchy_visible\' => array(
    \'visible\' => 0,
  ),
  \'draggableviews_depth_limit\' => \'-1\',
  \'draggableviews_repair\' => array(
    \'repair\' => \'repair\',
  ),
  \'tabledrag_types_add\' => \'Add type\',
  \'tabledrag_expand\' => array(
    \'expand_links\' => \'expand_links\',
    \'collapsed\' => 0,
    \'by_uid\' => 0,
  ),
  \'tabledrag_lock\' => array(
    \'lock\' => 0,
  ),
  \'draggableviews_default_on_top\' => \'1\',
  \'draggableviews_button_text\' => \'Save\',
  \'draggableviews_arguments\' => array(
    \'use_args\' => 0,
  ),
));


$handler->override_option(\'path\', $basepath . \'/outline\');
$handler->override_option(\'menu\', array(
  \'type\' => \'tab\',
  \'title\' => \'Outline\',
  \'description\' => \'\',
  \'weight\' => \'10\',
  \'name\' => \'navigation\',
));
$handler->override_option(\'tab_options\', array(
  \'type\' => \'none\',
  \'title\' => \'\',
  \'description\' => \'\',
  \'weight\' => 0,
  \'name\' => \'navigation\',
));






$handler = $view->new_display(\'page\', \'Build Page (default)\', \'page_6\');
$handler->override_option(\'relationships\', array(
  \'flag_content_rel\' => array(
    \'label\' => \'bookmarks\',
    \'required\' => 0,
    \'flag\' => $newflagname,
    \'user_scope\' => \'any\',
    \'id\' => \'flag_content_rel\',
    \'table\' => \'node\',
    \'field\' => \'flag_content_rel\',
    \'relationship\' => \'none\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
  ),
  \'field_text_ref_biblio_nid\' => array(
    \'label\' => \'Reference\',
    \'required\' => 0,
    \'delta\' => \'-1\',
    \'id\' => \'field_text_ref_biblio_nid\',
    \'table\' => \'node_data_field_text_ref_biblio\',
    \'field\' => \'field_text_ref_biblio_nid\',
    \'relationship\' => \'none\',
  ),
));
$handler->override_option(\'fields\', array(
  \'title\' => array(
    \'id\' => \'title\',
    \'table\' => \'node\',
    \'field\' => \'title\',
  ),
  \'field_text_notes_value\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'label_type\' => \'none\',
    \'format\' => \'default\',
    \'multiple\' => array(
      \'group\' => TRUE,
      \'multiple_number\' => \'\',
      \'multiple_from\' => \'\',
      \'multiple_reversed\' => FALSE,
    ),
    \'exclude\' => 0,
    \'id\' => \'field_text_notes_value\',
    \'table\' => \'node_data_field_text_notes\',
    \'field\' => \'field_text_notes_value\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'ops\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_type\' => \'toggle\',
    \'exclude\' => 0,
    \'id\' => \'ops\',
    \'table\' => \'flag_content\',
    \'field\' => \'ops\',
    \'relationship\' => \'flag_content_rel\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
  ),
));
$handler->override_option(\'sorts\', array(
  \'random\' => array(
    \'order\' => \'ASC\',
    \'id\' => \'random\',
    \'table\' => \'views\',
    \'field\' => \'random\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
));
$handler->override_option(\'filters\', array(
  \'type\' => array(
    \'operator\' => \'not in\',
    \'value\' => array(
      \'biblio\' => \'biblio\',
      \'feedback\' => \'feedback\',
      \'loop\' => \'loop\',
      \'task\' => \'task\',
    ),
    \'group\' => \'0\',
    \'exposed\' => FALSE,
    \'expose\' => array(
      \'operator\' => FALSE,
      \'label\' => \'\',
    ),
    \'id\' => \'type\',
    \'table\' => \'node\',
    \'field\' => \'type\',
    \'override\' => array(
      \'button\' => \'Override\',
    ),
    \'relationship\' => \'none\',
  ),
));
$handler->override_option(\'access\', array(
  \'type\' => \'role\',
  \'role\' => array(
    \'4\' => 4,
  ),
));
$handler->override_option(\'header_format\', \'1\');
$handler->override_option(\'items_per_page\', 16);
$handler->override_option(\'use_pager\', \'1\');
$handler->override_option(\'style_plugin\', \'grid\');
$handler->override_option(\'style_options\', array(
  \'grouping\' => \'\',
  \'columns\' => \'4\',
  \'alignment\' => \'horizontal\',
  \'fill_single_line\' => 1,
));
$handler->override_option(\'path\', $basepath . \'/build\');
$handler->override_option(\'menu\', array(
  \'type\' => \'tab\',
  \'title\' => \'Build\',
  \'description\' => \'\',
  \'weight\' => \'20\',
  \'name\' => \'navigation\',
));
$handler->override_option(\'tab_options\', array(
  \'type\' => \'none\',
  \'title\' => \'\',
  \'description\' => \'\',
  \'weight\' => 0,
  \'name\' => \'navigation\',
));





$handler = $view->new_display(\'page\', \'Build Default Tab Placeholder\', \'page_7\');
$handler->override_option(\'access\', array(
  \'type\' => \'role\',
  \'role\' => array(
    \'4\' => 4,
  ),
));
$handler->override_option(\'header_format\', \'1\');
$handler->override_option(\'style_plugin\', \'default\');
$handler->override_option(\'style_options\', array());
$handler->override_option(\'path\', $basepath . \'/build/browse\');
$handler->override_option(\'menu\', array(
  \'type\' => \'default tab\',
  \'title\' => \'Browse\',
  \'description\' => \'\',
  \'weight\' => \'20\',
  \'name\' => \'navigation\',
));
$handler->override_option(\'tab_options\', array(
  \'type\' => \'none\',
  \'title\' => \'\',
  \'description\' => \'\',
  \'weight\' => 0,
  \'name\' => \'navigation\',
));




$handler = $view->new_display(\'page\', \'Build (By Tag)\', \'page_8\');
$handler->override_option(\'relationships\', array(
  \'flag_content_rel\' => array(
    \'label\' => \'bookmarks\',
    \'required\' => 0,
    \'flag\' => $newflagname,
    \'user_scope\' => \'any\',
    \'id\' => \'flag_content_rel\',
    \'table\' => \'node\',
    \'field\' => \'flag_content_rel\',
    \'relationship\' => \'none\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
  ),
  \'field_text_ref_biblio_nid\' => array(
    \'label\' => \'Reference\',
    \'required\' => 0,
    \'delta\' => \'-1\',
    \'id\' => \'field_text_ref_biblio_nid\',
    \'table\' => \'node_data_field_text_ref_biblio\',
    \'field\' => \'field_text_ref_biblio_nid\',
    \'relationship\' => \'none\',
  ),
));
$handler->override_option(\'fields\', array(
  \'title\' => array(
    \'id\' => \'title\',
    \'table\' => \'node\',
    \'field\' => \'title\',
  ),
  \'field_text_notes_value\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'label_type\' => \'none\',
    \'format\' => \'default\',
    \'multiple\' => array(
      \'group\' => TRUE,
      \'multiple_number\' => \'\',
      \'multiple_from\' => \'\',
      \'multiple_reversed\' => FALSE,
    ),
    \'exclude\' => 0,
    \'id\' => \'field_text_notes_value\',
    \'table\' => \'node_data_field_text_notes\',
    \'field\' => \'field_text_notes_value\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'ops\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_type\' => \'toggle\',
    \'exclude\' => 0,
    \'id\' => \'ops\',
    \'table\' => \'flag_content\',
    \'field\' => \'ops\',
    \'relationship\' => \'flag_content_rel\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
  ),
));
$handler->override_option(\'sorts\', array(
  \'random\' => array(
    \'order\' => \'ASC\',
    \'id\' => \'random\',
    \'table\' => \'views\',
    \'field\' => \'random\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
));
$handler->override_option(\'filters\', array(
  \'type\' => array(
    \'operator\' => \'not in\',
    \'value\' => array(
      \'biblio\' => \'biblio\',
      \'feedback\' => \'feedback\',
      \'loop\' => \'loop\',
      \'task\' => \'task\',
    ),
    \'group\' => \'0\',
    \'exposed\' => FALSE,
    \'expose\' => array(
      \'operator\' => FALSE,
      \'label\' => \'\',
    ),
    \'id\' => \'type\',
    \'table\' => \'node\',
    \'field\' => \'type\',
    \'override\' => array(
      \'button\' => \'Override\',
    ),
    \'relationship\' => \'none\',
  ),
  \'field_text_tags_value\' => array(
    \'operator\' => \'and\',
    \'value\' => array(),
    \'group\' => \'0\',
    \'exposed\' => TRUE,
    \'expose\' => array(
      \'use_operator\' => 0,
      \'operator\' => \'field_text_tags_value_op\',
      \'identifier\' => \'field_text_tags_value\',
      \'label\' => \'Tags:\',
      \'bef_filter_description\' => \'\',
      \'bef_format\' => \'bef\',
      \'optional\' => 0,
      \'single\' => 0,
      \'remember\' => 0,
      \'reduce\' => 0,
      \'vfs_selective\' => 0,
      \'vfs_active\' => 0,
      \'bef_select_all_none\' => 0,
    ),
    \'id\' => \'field_text_tags_value\',
    \'table\' => \'node_data_field_text_tags\',
    \'field\' => \'field_text_tags_value\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
    \'reduce_duplicates\' => 0,
  ),
));
$handler->override_option(\'access\', array(
  \'type\' => \'role\',
  \'role\' => array(
    \'4\' => 4,
  ),
));
$handler->override_option(\'header_format\', \'1\');
$handler->override_option(\'items_per_page\', 16);
$handler->override_option(\'use_pager\', \'1\');
$handler->override_option(\'style_plugin\', \'grid\');
$handler->override_option(\'style_options\', array(
  \'grouping\' => \'\',
  \'columns\' => \'4\',
  \'alignment\' => \'horizontal\',
  \'fill_single_line\' => 1,
));
$handler->override_option(\'path\', $basepath . \'/build/tags\');
$handler->override_option(\'menu\', array(
  \'type\' => \'tab\',
  \'title\' => \'By Tag\',
  \'description\' => \'\',
  \'weight\' => \'20\',
  \'name\' => \'navigation\',
));
$handler->override_option(\'tab_options\', array(
  \'type\' => \'none\',
  \'title\' => \'\',
  \'description\' => \'\',
  \'weight\' => 0,
  \'name\' => \'navigation\',
));



$handler = $view->new_display(\'page\', \'Build (By Reference)\', \'page_9\');
$handler->override_option(\'relationships\', array(
  \'flag_content_rel\' => array(
    \'label\' => \'bookmarks\',
    \'required\' => 0,
    \'flag\' => $newflagname,
    \'user_scope\' => \'any\',
    \'id\' => \'flag_content_rel\',
    \'table\' => \'node\',
    \'field\' => \'flag_content_rel\',
    \'relationship\' => \'none\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
  ),
  \'field_text_ref_biblio_nid\' => array(
    \'label\' => \'Reference\',
    \'required\' => 0,
    \'delta\' => \'-1\',
    \'id\' => \'field_text_ref_biblio_nid\',
    \'table\' => \'node_data_field_text_ref_biblio\',
    \'field\' => \'field_text_ref_biblio_nid\',
    \'relationship\' => \'none\',
  ),
));
$handler->override_option(\'fields\', array(
  \'title\' => array(
    \'id\' => \'title\',
    \'table\' => \'node\',
    \'field\' => \'title\',
  ),
  \'field_text_notes_value\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'label_type\' => \'none\',
    \'format\' => \'default\',
    \'multiple\' => array(
      \'group\' => TRUE,
      \'multiple_number\' => \'\',
      \'multiple_from\' => \'\',
      \'multiple_reversed\' => FALSE,
    ),
    \'exclude\' => 0,
    \'id\' => \'field_text_notes_value\',
    \'table\' => \'node_data_field_text_notes\',
    \'field\' => \'field_text_notes_value\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'ops\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_type\' => \'toggle\',
    \'exclude\' => 0,
    \'id\' => \'ops\',
    \'table\' => \'flag_content\',
    \'field\' => \'ops\',
    \'relationship\' => \'flag_content_rel\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
  ),
));
$handler->override_option(\'sorts\', array(
  \'random\' => array(
    \'order\' => \'ASC\',
    \'id\' => \'random\',
    \'table\' => \'views\',
    \'field\' => \'random\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
));
$handler->override_option(\'filters\', array(
  \'type\' => array(
    \'operator\' => \'not in\',
    \'value\' => array(
      \'biblio\' => \'biblio\',
      \'feedback\' => \'feedback\',
      \'loop\' => \'loop\',
      \'task\' => \'task\',
    ),
    \'group\' => \'0\',
    \'exposed\' => FALSE,
    \'expose\' => array(
      \'operator\' => FALSE,
      \'label\' => \'\',
    ),
    \'id\' => \'type\',
    \'table\' => \'node\',
    \'field\' => \'type\',
    \'override\' => array(
      \'button\' => \'Override\',
    ),
    \'relationship\' => \'none\',
  ),
  \'field_text_ref_biblio_nid\' => array(
    \'operator\' => \'or\',
    \'value\' => array(),
    \'group\' => \'0\',
    \'exposed\' => TRUE,
    \'expose\' => array(
      \'use_operator\' => 0,
      \'operator\' => \'field_text_ref_biblio_nid_op\',
      \'identifier\' => \'field_text_ref_biblio_nid\',
      \'label\' => \'Reference: \',
      \'bef_filter_description\' => \'\',
      \'bef_format\' => \'default\',
      \'optional\' => 0,
      \'single\' => 1,
      \'remember\' => 0,
      \'reduce\' => 0,
      \'vfs_selective\' => 0,
      \'vfs_active\' => 0,
      \'bef_select_all_none\' => 0,
    ),
    \'id\' => \'field_text_ref_biblio_nid\',
    \'table\' => \'node_data_field_text_ref_biblio\',
    \'field\' => \'field_text_ref_biblio_nid\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
    \'reduce_duplicates\' => 0,
  ),
));
$handler->override_option(\'access\', array(
  \'type\' => \'role\',
  \'role\' => array(
    \'4\' => 4,
  ),
));
$handler->override_option(\'header_format\', \'1\');
$handler->override_option(\'items_per_page\', 16);
$handler->override_option(\'use_pager\', \'1\');
$handler->override_option(\'style_plugin\', \'grid\');
$handler->override_option(\'style_options\', array(
  \'grouping\' => \'\',
  \'columns\' => \'4\',
  \'alignment\' => \'horizontal\',
  \'fill_single_line\' => 1,
));
$handler->override_option(\'path\', $basepath . \'/build/refs\');
$handler->override_option(\'menu\', array(
  \'type\' => \'tab\',
  \'title\' => \'By Reference\',
  \'description\' => \'\',
  \'weight\' => \'20\',
  \'name\' => \'navigation\',
));
$handler->override_option(\'tab_options\', array(
  \'type\' => \'none\',
  \'title\' => \'\',
  \'description\' => \'\',
  \'weight\' => 0,
  \'name\' => \'navigation\',
));





$handler = $view->new_display(\'page\', \'References Page\', \'page_10\');
// $handler->override_option(\'header\', \'This is the third page display\');
// $handler->override_option(\'header_format\', \'1\');
//$handler->override_option(\'header_empty\', 1);
$handler->override_option(\'fields\', array(
  \'field_text_ref_biblio_nid\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'label_type\' => \'none\',
    \'format\' => \'views_single\',
    \'multiple\' => array(
      \'group\' => 0,
      \'multiple_number\' => \'\',
      \'multiple_from\' => \'\',
      \'multiple_reversed\' => 0,
    ),
    \'exclude\' => 0,
    \'id\' => \'field_text_ref_biblio_nid\',
    \'table\' => \'node_data_field_text_ref_biblio\',
    \'field\' => \'field_text_ref_biblio_nid\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
));
$handler->override_option(\'sorts\', array(
  \'lastname\' => array(
    \'order\' => \'ASC\',
    \'id\' => \'lastname\',
    \'table\' => \'biblio_contributor_data\',
    \'field\' => \'lastname\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'field_text_ref_biblio_nid\',
  ),
));
$handler->override_option(\'distinct\', 0);
$handler->override_option(\'style_plugin\', \'semanticviews_default\');
$handler->override_option(\'style_options\', array(
  \'grouping\' => \'\',
  \'group\' => array(
    \'element_type\' => \'h3\',
    \'class\' => \'title\',
  ),
  \'list\' => array(
    \'element_type\' => \'\',
    \'class\' => \'\',
  ),
  \'row\' => array(
    \'element_type\' => \'div\',
    \'class\' => \'\',
    \'last_every_nth\' => \'0\',
    \'first_class\' => \'first\',
    \'last_class\' => \'last\',
    \'striping_classes\' => \'odd even\',
  ),
));
$handler->override_option(\'row_plugin\', \'semanticviews_fields\');
$handler->override_option(\'row_options\', array(
  \'semantic_html\' => array(
    \'field_text_ref_biblio_nid\' => array(
      \'element_type\' => \'p\',
      \'class\' => \'\',
    ),
  ),
  \'skip_blank\' => 0,
));
$handler->override_option(\'path\', $basepath . \'/references\');
$handler->override_option(\'menu\', array(
  \'type\' => \'tab\',
  \'title\' => \'References\',
  \'description\' => \'\',
  \'weight\' => \'30\',
  \'name\' => \'navigation\',
));
$handler->override_option(\'tab_options\', array(
  \'type\' => \'none\',
  \'title\' => \'\',
  \'description\' => \'\',
  \'weight\' => 0,
  \'name\' => \'navigation\',
));



$handler = $view->new_display(\'attachment\', \'Add Content Bar Attachment\', \'attachment_1\');
$handler->override_option(\'relationships\', array());
$handler->override_option(\'fields\', array(
  \'nothing\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'text\' => \'add text\',
      \'make_link\' => 1,
      \'path\' => \'node/add/text?edit&#91;flag&#93;&#91;\' . $newflagname .\'&#93;=1&destination=\' . $basepath . \'/outline\',
      \'link_class\' => \'addtext\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'exclude\' => 0,
    \'id\' => \'nothing\',
    \'table\' => \'views\',
    \'field\' => \'nothing\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'nothing_1\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'text\' => \'add link\',
      \'make_link\' => 1,
      \'path\' => \'node/add/link?edit&#91;flag&#93;&#91;\' . $newflagname .\'&#93;=1&destination=\' . $basepath . \'/outline\',
      \'link_class\' => \'addlink\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'exclude\' => 0,
    \'id\' => \'nothing\',
    \'table\' => \'views\',
    \'field\' => \'nothing\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),  
  \'nothing_2\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'text\' => \'add image\',
      \'make_link\' => 1,
      \'path\' => \'node/add/image?edit&#91;flag&#93;&#91;\' . $newflagname .\'&#93;=1&destination=\' . $basepath . \'/outline\',
      \'link_class\' => \'addimage\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'exclude\' => 0,
    \'id\' => \'nothing\',
    \'table\' => \'views\',
    \'field\' => \'nothing\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'nothing_3\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'text\' => \'add audio\',
      \'make_link\' => 1,
      \'path\' => \'node/add/audio?edit&#91;flag&#93;&#91;\' . $newflagname .\'&#93;=1&destination=\' . $basepath . \'/outline\',
      \'link_class\' => \'addaudio\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'exclude\' => 0,
    \'id\' => \'nothing\',
    \'table\' => \'views\',
    \'field\' => \'nothing\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),  
  \'nothing_4\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'text\' => \'add media\',
      \'make_link\' => 1,
      \'path\' => \'node/add/media?edit&#91;flag&#93;&#91;\' . $newflagname .\'&#93;=1&destination=\' . $basepath . \'/outline\',
      \'link_class\' => \'addmedia\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'exclude\' => 0,
    \'id\' => \'nothing\',
    \'table\' => \'views\',
    \'field\' => \'nothing\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'nothing_5\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'text\' => \'add place\',
      \'make_link\' => 1,
      \'path\' => \'node/add/place?edit&#91;flag&#93;&#91;\' . $newflagname .\'&#93;=1&destination=\' . $basepath . \'/outline\',
      \'link_class\' => \'addplace\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'exclude\' => 0,
    \'id\' => \'nothing\',
    \'table\' => \'views\',
    \'field\' => \'nothing\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),  
  \'nothing_6\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'text\' => \'add task\',
      \'make_link\' => 1,
      \'path\' => \'node/add/task?edit&#91;flag&#93;&#91;\' . $newflagname .\'&#93;=1&destination=\' . $basepath . \'/outline\',
      \'link_class\' => \'addtask\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'exclude\' => 0,
    \'id\' => \'nothing\',
    \'table\' => \'views\',
    \'field\' => \'nothing\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'nothing_7\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'text\' => \'add event\',
      \'make_link\' => 1,
      \'path\' => \'node/add/event?edit&#91;flag&#93;&#91;\' . $newflagname .\'&#93;=1&destination=\' . $basepath . \'/outline\',
      \'link_class\' => \'addevent\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'exclude\' => 0,
    \'id\' => \'nothing\',
    \'table\' => \'views\',
    \'field\' => \'nothing\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),  
  \'nothing_8\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'text\' => \'add file\',
      \'make_link\' => 1,
      \'path\' => \'node/add/file?edit&#91;flag&#93;&#91;\' . $newflagname .\'&#93;=1&destination=\' . $basepath . \'/outline\',
      \'link_class\' => \'addfile\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'exclude\' => 0,
    \'id\' => \'nothing\',
    \'table\' => \'views\',
    \'field\' => \'nothing\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),  
));
$handler->override_option(\'access\', array(
  \'type\' => \'role\',
  \'role\' => array(
    \'4\' => 4,
  ),
));
$handler->override_option(\'items_per_page\', 1);
$handler->override_option(\'style_plugin\', \'grid\');
$handler->override_option(\'style_options\', array(
  \'grouping\' => \'\',
  \'columns\' => \'1\',
  \'alignment\' => \'horizontal\',
  \'fill_single_line\' => 1,
));
$handler->override_option(\'row_options\', array(
  \'inline\' => array(
    \'nothing\' => \'nothing\',
    \'nothing_1\' => \'nothing_1\',
    \'nothing_2\' => \'nothing_2\',
    \'nothing_3\' => \'nothing_3\',
    \'nothing_4\' => \'nothing_4\',
    \'nothing_5\' => \'nothing_5\',
    \'nothing_6\' => \'nothing_6\',
    \'nothing_7\' => \'nothing_7\',
    \'nothing_8\' => \'nothing_8\',
  ),
  \'separator\' => \'    \',
  \'hide_empty\' => 0,
));
$handler->override_option(\'attachment_position\', \'before\');
$handler->override_option(\'inherit_arguments\', 0);
$handler->override_option(\'inherit_exposed_filters\', FALSE);
$handler->override_option(\'inherit_pager\', FALSE);
$handler->override_option(\'render_pager\', TRUE);
$handler->override_option(\'displays\', array(
  \'page_5\' => \'page_5\',
  \'default\' => 0,
  \'page_1\' => 0,
  \'page_2\' => 0,
  \'page_4\' => 0,
  \'page_3\' => 0,
  \'page_6\' => 0,
  \'page_7\' => 0,
  \'page_8\' => 0,
  \'page_9\' => 0,
  \'page_10\' => 0,

));

$handler = $view->new_display(\'attachment\', \'Writer Page Attachment\', \'attachment_2\');
$handler->override_option(\'relationships\', array());
$handler->override_option(\'fields\', array(
  \'field_loop_description_value\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'label_type\' => \'none\',
    \'format\' => \'default\',
    \'multiple\' => array(
      \'group\' => TRUE,
      \'multiple_number\' => \'\',
      \'multiple_from\' => \'\',
      \'multiple_reversed\' => FALSE,
    ),
    \'exclude\' => 0,
    \'id\' => \'field_loop_description_value\',
    \'table\' => \'node_data_field_loop_description\',
    \'field\' => \'field_loop_description_value\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'links\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'exclude\' => 1,
    \'id\' => \'links\',
    \'table\' => \'eazyedit\',
    \'field\' => \'links\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'changed\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 0,
      \'text\' => \'\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'date_format\' => \'time ago\',
    \'custom_date_format\' => \'\',
    \'exclude\' => 1,
    \'id\' => \'changed\',
    \'table\' => \'node\',
    \'field\' => \'changed\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'name\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 1,
      \'text\' => \'modified by [name] [changed]\',
      \'make_link\' => 0,
      \'path\' => \'\',
      \'link_class\' => \'\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_user\' => 0,
    \'overwrite_anonymous\' => 0,
    \'anonymous_text\' => \'\',
    \'exclude\' => 0,
    \'id\' => \'name\',
    \'table\' => \'users\',
    \'field\' => \'name\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
  \'nid\' => array(
    \'label\' => \'\',
    \'alter\' => array(
      \'alter_text\' => 1,
      \'text\' => \'edit\',
      \'make_link\' => 1,
      \'path\' => \'loop/[nid]/edit\',
      \'link_class\' => \'automodal editlooplink\',
      \'alt\' => \'\',
      \'prefix\' => \'\',
      \'suffix\' => \'\',
      \'target\' => \'\',
      \'help\' => \'\',
      \'trim\' => 0,
      \'max_length\' => \'\',
      \'word_boundary\' => 1,
      \'ellipsis\' => 1,
      \'html\' => 0,
      \'strip_tags\' => 0,
    ),
    \'empty\' => \'\',
    \'hide_empty\' => 0,
    \'empty_zero\' => 0,
    \'link_to_node\' => 0,
    \'exclude\' => 0,
    \'id\' => \'nid\',
    \'table\' => \'node\',
    \'field\' => \'nid\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
));
$handler->override_option(\'filters\', array(
  \'nid\' => array(
    \'operator\' => \'=\',
    \'value\' => array(
      \'value\' => $node->nid,
      \'min\' => \'\',
      \'max\' => \'\',
    ),
    \'group\' => \'0\',
    \'exposed\' => FALSE,
    \'expose\' => array(
      \'operator\' => FALSE,
      \'label\' => \'\',
    ),
    \'id\' => \'nid\',
    \'table\' => \'node\',
    \'field\' => \'nid\',
    \'override\' => array(
      \'button\' => \'Use default\',
    ),
    \'relationship\' => \'none\',
  ),
));
$handler->override_option(\'style_plugin\', \'semanticviews_default\');
$handler->override_option(\'style_options\', array(
  \'grouping\' => \'\',
  \'group\' => array(
    \'element_type\' => \'h3\',
    \'class\' => \'title\',
  ),
  \'list\' => array(
    \'element_type\' => \'\',
    \'class\' => \'\',
  ),
  \'row\' => array(
    \'element_type\' => \'div\',
    \'class\' => \'\',
    \'last_every_nth\' => \'0\',
    \'first_class\' => \'first\',
    \'last_class\' => \'last\',
    \'striping_classes\' => \'odd even\',
  ),
));
$handler->override_option(\'row_plugin\', \'semanticviews_fields\');
$handler->override_option(\'row_options\', array(
  \'semantic_html\' => array(
    \'field_loop_description_value\' => array(
      \'element_type\' => \'p\',
      \'class\' => \'\',
    ),
    \'nid\' => array(
      \'element_type\' => \'div\',
      \'class\' => \'eazyedit eazyedit-node\',
    ),
    \'name\' => array(
      \'element_type\' => \'p\',
      \'class\' => \'\',
    ),
  ),
  \'skip_blank\' => 0,
));
$handler->override_option(\'attachment_position\', \'before\');
$handler->override_option(\'inherit_arguments\', TRUE);
$handler->override_option(\'inherit_exposed_filters\', FALSE);
$handler->override_option(\'inherit_pager\', FALSE);
$handler->override_option(\'render_pager\', 0);
$handler->override_option(\'displays\', array(
  \'page_1\' => \'page_1\',
  \'default\' => 0,
  \'page_2\' => 0,
  \'page_3\' => 0,
  \'page_4\' => 0,
  \'page_5\' => 0,
  \'page_6\' => 0,
  \'page_7\' => 0,
  \'page_8\' => 0,
  \'page_9\' => 0,
  \'page_10\' => 0,
));


$view->save();
menu_rebuild();


// to do: flush menu cache + possibly use alternate path coupled with redirects to ensure successful menu creation
',
              'vars' => array(
                '0' => 'node',
              ),
              '#eval input' => array(
                'rules_input_evaluator_php' => array(
                  'code' => array(
                    '0' => 'node',
                  ),
                ),
              ),
            ),
            '#name' => 'rules_action_custom_php',
            '#info' => array(
              'label' => 'create view',
              'label callback' => FALSE,
              'module' => 'PHP',
              'eval input' => array(
                '0' => 'code',
              ),
            ),
          ),
          '2' => array(
            '#weight' => 0,
            '#info' => array(
              'label' => 'create content flagged rule',
              'label callback' => FALSE,
              'module' => 'PHP',
              'eval input' => array(
                '0' => 'code',
              ),
            ),
            '#name' => 'rules_action_custom_php',
            '#settings' => array(
              'code' => '$newflagname = \'loopflag\'.$node->nid;
$newflagtitle = $node->title;
$text_flagged_rule_name = \'add_to_\' . $newflagname . \'_rule\';
$text_flagged_rule_title = $node->title;

$rule = array(
  \'#type\' => \'rule\',
  \'#set\' => \'event_flag_flagged_\' . $newflagname,
  \'#label\' => t(\'on flagging content under \' . $newflagname . \' do\'),
  \'#status\' => \'custom\',
  \'#categories\' => array(\'loop\'),
  \'#active\' => 1,
);

$condition1 = rules_use_condition(\'rules_condition_content_is_type\', array(
  \'#settings\' => array(
    \'#argument map\' => array(\'node\' => \'node\'),
    \'type\' => array(
      \'audio\' => \'audio\',
      \'event\' => \'event\',
      \'file\' => \'file\',
      \'image\' => \'image\',
      \'link\' => \'link\',
      \'media\' => \'media\',
      \'place\' => \'place\',
      \'task\' => \'task\',
      \'text\' => \'text\',
      \'video\' => \'video\',
    ),
  ),
), t(\'flagged content is clonable\'));

$condition2 = rules_use_condition(\'rules_condition_content_is_new\', array(
  \'#settings\' => array(
    \'#argument map\' => array(\'node\' => \'node\'),
  ),
  \'#negate\'=>1,
), t(\'flagged content is not new\'));

$action1 = rules_use_action(\'rules_action_custom_php\', array(
  \'#settings\' => array(
    \'code\' => \'include_once(\\\'./\\\'. drupal_get_path(\\\'module\\\', \\\'clone\\\') .\\\'/clone.pages.inc\\\');
$new_nid = clone_node_save($node->nid); //clone node and return cloned node id 
$flag->flag(\\\'flag\\\', $new_nid);
$flag->flag(\\\'unflag\\\', $node->nid);\',
    \'vars\' => array (
      0 => \'flag\',
      1 => \'node\',
    ),
  ),
  \'#info\' => array (
    \'label\' => \'create $text.clone\',
    \'label callback\' => false,
    \'module\' => \'PHP\',
    \'eval input\' => array (
      0 => \'code\',
    ),
  ),
), t(\'create clone and flag it\'));


$rule += array(
  \'#conditions\' => array($condition1, $condition2),
  \'#actions\' => array($action1),
);
rules_item_save(\'rules\', $text_flagged_rule_name, $rule);
rules_clear_cache();

',
              'vars' => array(
                '0' => 'node',
              ),
              '#eval input' => array(
                'token_rules_input_evaluator' => array(
                  'code' => array(
                    '0' => 'node',
                  ),
                ),
                'rules_input_evaluator_php' => array(
                  'code' => array(
                    '0' => 'node',
                  ),
                ),
              ),
            ),
            '#type' => 'action',
          ),
          '3' => array(
            '#weight' => 0,
            '#info' => array(
              'label' => 'create redirect rule',
              'label callback' => FALSE,
              'module' => 'PHP',
              'eval input' => array(
                '0' => 'code',
              ),
            ),
            '#name' => 'rules_action_custom_php',
            '#settings' => array(
              'code' => '$section = $node->field_loop_section[0][\'value\'];
$basemenu = \'menu-\' . $section;
$basepath = $section.\'/\'. $node->nid;
$newflagname = \'loopflag\'.$node->nid;
$newflagtitle = $node->title;
$text_redirect_rule_name = \'redirect content in \' . $newflagname;
$text_flagged_rule_title = $node->title;
$node_nid_token = \'<? echo html_entity_decode(\'&#91;node:nid&#93;\') ?>\';

$rule = array (
  \'#type\' => \'rule\',
  \'#set\' => \'event_node_view\',
  \'#label\' => \'redirect content flagged under \' . $newflagname,
  \'#active\' => 1,
  \'#categories\' => array (\'redirect\'),
  \'#status\' => \'custom\',
);

$condition1 = rules_use_condition(\'flag_rules_condition_flagged_node\', array(
  \'#settings\' => array (
    \'flag\' => $newflagname,
    \'#argument map\' => array (
      \'object\' => \'node\',
      \'user\' => \'user\',
    ),
  ),
  \'#info\' => array (
    \'label\' => \'Flag \' . $newflagname . \' is flagged, for viewed content\',
    \'base\' => \'flag_rules_condition_flagged\',
    \'label callback\' => \'flag_rules_condition_flagged_label\',
    \'arguments\' => array (
      \'flag\' => array (
        \'type\' => \'flag\',
        \'label\' => \'Flag\',
        \'flag_type\' => \'node\',
      ),
      \'object\' => array (
        \'type\' => \'node\',
        \'label\' => \'Flagged content\',
      ),
      \'user\' => array (
        \'type\' => \'user\',
        \'label\' => \'User on whose behalf to check\',
        \'description\' => \'For non-global flags, this is the user on whose behalf the flag is checked.\',
      ),
    ),
    \'module\' => \'Flag\',
  ),
), t(\'Flag \' . $newflagname . \' is flagged, for viewed content\'));

$action1 = rules_use_action(\'rules_action_drupal_goto\', array(
  \'#type\' => \'action\',
  \'#settings\' => array (
    \'path\' => $basepath .\'#\' . $node_nid_token,
    \'query\' => \'\',
    \'fragment\' => \'\',
    \'force\' => 1,
    \'immediate\' => 0,
    \'#eval input\' => array (
      \'token_rules_input_evaluator\' => array (
        \'path\' => array (
          0 => \'node\',
        ),
      ),
    ),
  ),
  \'#info\' => array (
    \'label\' => \'redirect text to loop\',
    \'module\' => \'System\',
    \'eval input\' => array (
      0 => \'path\',
      1 => \'query\',
      2 => \'fragment\',
    ),
  ),
), t(\'redirect text to loop\'));

$rule += array(
  \'#conditions\' => array($condition1),
  \'#actions\' => array($action1),
);
rules_item_save(\'rules\', $text_redirect_rule_name, $rule);
rules_clear_cache();',
              'vars' => array(
                '0' => 'node',
              ),
              '#eval input' => array(
                'rules_input_evaluator_php' => array(
                  'code' => array(
                    '0' => 'node',
                  ),
                ),
              ),
            ),
            '#type' => 'action',
          ),
          '4' => array(
            '#type' => 'action',
            '#settings' => array(
              'code' => '$newflagname = \'loopflag\'.$node->nid;
$viewid = db_result(db_query("SELECT vid FROM {views_view} WHERE name = \'%s\' ", $newflagname));
$feedback_mode_rule_name = \'feedback mode for \' . $newflagname;
$node_nid_token = \'<? echo html_entity_decode(\'&#91;node:nid&#93;\') ?>\';

$rule = array (
  \'#type\' => \'rule\',
  \'#set\' => \'event_node_update\',
  \'#label\' => \'feedback mode for \' . $newflagname,
  \'#active\' => 1,
  \'#weight\' => \'0\',
  \'#categories\' => array (\'workflow\'),
  \'#status\' => \'custom\',
);

$condition1 = rules_use_condition(\'rules_condition_text_compare\', array(
  \'#settings\' => array (
    \'text1\' => $node_nid_token,
    \'text2\' => $node->nid,
    \'regex\' => 0,
    \'#eval input\' => array (
      \'token_rules_input_evaluator\' => array (
        \'text1\' => array (
          0 => \'node\',
        ),
      ),
    ),
  ),
  \'#info\' => array (
    \'label\' => \'loop is \' . $newflagname,
    \'label callback\' => false,
      \'arguments\' => array (
        \'text1\' => array (
          \'label\' => \'Text 1\',
          \'type\' => \'string\',
        ),
        \'text2\' => array (
          \'label\' => \'Text 2\',
          \'type\' => \'string\',
        ),
      ),
    \'module\' => \'Rules\',
  ),
), t(\'loop is loop\'));

$condition2 = rules_use_condition(\'rules_condition_content_is_type\', array(
  \'#settings\' => array (
    \'type\' => array (\'loop\' => \'loop\'),
    \'#argument map\' => array (\'node\' => \'node\'),
  ),
  \'#info\' => array (
    \'label\' => \'Updated content is Loop\',
    \'arguments\' => array (
      \'node\' => array (
        \'type\' => \'node\',
        \'label\' => \'Content\',
      ),
    ),
    \'module\' => \'Node\',
  ),
), t(\'Updated content is loop\'));

$condition3 = rules_use_condition(\'content_rules_field_changed\', array(
  \'#settings\' => array (
    \'field_name\' => \'field_loop_mode\',
    \'#argument map\' => array (
      \'node\' => \'node\',
      \'node_unchanged\' => \'node_unchanged\',
    ),
  ),
  \'#info\' => array (
    \'label\' => \'Updated content\\\'s field \\\'field_loop_mode\\\' has been changed\',
    \'arguments\' => array (
      \'node\' => array (
        \'type\' => \'node\',
        \'label\' => \'Content containing changes\',
      ),
      \'node_unchanged\' => array (
        \'type\' => \'node\',
        \'label\' => \'Content not containing changes\',
      ),
    ),
    \'module\' => \'CCK\',
  ),
), t(\'Updated content\\\'s field \\\'field_loop_mode\\\' has been changed\'));

$condition4 = rules_use_condition(\'content_rules_field_has_value\', array(
  \'#settings\' => array (
    \'field_name\' => \'field_loop_mode\',
    \'#argument map\' => array (
      \'node\' => \'node\',
    ),
    \'value\' => array (
      0 => array (
        \'value\' => \'feedback\',
      ),
    ),
    \'code\' => \'\',
    \'vars\' => array (),
   ),
  \'#info\' => array (
    \'label\' => \'Loop mode changed to feedback\',
    \'label callback\' => false,
    \'arguments\' => array (
      \'node\' => array (
        \'type\' => \'node\',
        \'label\' => \'Content\',
      ),
    ),
    \'eval input\' => array (
      0 => \'code\',
      1 => \'value|0|value\',
    ),
    \'module\' => \'CCK\',
  ),
), t(\'Loop mode changed to feedback\'));

$action1 = rules_use_action(\'views_bulk_operations_rules_action_node\', array(
  \'#type\' => \'action\',
  \'#info\' => array (
    \'label\' => \'change all flagged nodes to feedback mode\',
    \'label callback\' => false,
    \'arguments\' => array (
      \'object\' => array (
        \'type\' => \'node\',
        \'label\' => \'Object\',
        \'description\' => \'The chosen object will be loaded as the <code>$object</code> variable, available below.\',
      ),
    ),
    \'module\' => \'Views Bulk Operations\',
    \'eval input\' => array (),
    \'base\' => \'views_bulk_operations_rules_action\',
  ),
  \'#settings\' => array (
    \'#argument map\' => array (
      \'object\' => \'node\',
    ),
    \'view_vid\' => $viewid,
    \'operation_key\' => \'views_bulk_operations_fields_action\',
    \'operation_arguments\' => \'\',
    \'view_exposed_input\' => \'\',
    \'view_arguments\' => \'\',
    \'field_text_notes\' => array (
      0 => array (
        \'value\' => \'oscillation
feedback
spin
circulation
loophole\',
        \'_error_element\' => \'field_text_notes][0][value\',
      ),
    ),
    \'field_text_notes_check\' => true,
    \'field_text_notes_add\' => false,
    \'#field_info\' => array (
      \'field_loop_mode\' => array (
        \'field_name\' => \'field_loop_mode\',
        \'type_name\' => \'loop\',
        \'display_settings\' => array (
          \'label\' => array (
            \'format\' => \'above\',
            \'exclude\' => 0,
          ),
          \'teaser\' => array (
            \'format\' => \'default\',
            \'exclude\' => 0,
          ),
          \'full\' => array (
            \'format\' => \'default\',
            \'exclude\' => 0,
          ),
          4 => array (
            \'format\' => \'default\',
            \'exclude\' => 0,
          ),
          \'token\' => array (
            \'format\' => \'default\',
            \'exclude\' => 0,
          ),
        ),
        \'widget_active\' => \'1\',
        \'type\' => \'text\',
        \'required\' => false,
        \'multiple\' => \'0\',
        \'db_storage\' => \'0\',
        \'module\' => \'text\',
        \'active\' => \'1\',
        \'locked\' => \'0\',
        \'columns\' => array (
          \'value\' => array (
            \'type\' => \'text\',
            \'size\' => \'big\',
            \'not null\' => false,
            \'sortable\' => true,
            \'views\' => true,
          ),
        ),
        \'text_processing\' => \'0\',
        \'max_length\' => \'\',
        \'allowed_values\' => \'oscillation
feedback
spin
circulation
loophole
\',
        \'allowed_values_php\' => \'\',
        \'widget\' => array (
          \'default_value\' => array (
            0 => array (
              \'value\' => \'oscillation\',
            ),
          ),
          \'default_value_php\' => NULL,
          \'label\' => \'Mode\',
          \'weight\' => \'32\',
          \'description\' => \'\',
          \'type\' => \'optionwidgets_select\',
          \'module\' => \'optionwidgets\',
        ),
      ),
    ),
    \'field_loop_mode\' => array (
      0 => array (
        \'value\' => \'feedback\',
      ),
    ),
    \'field_loop_mode_check\' => true,
    \'field_loop_mode_add\' => false,
  ),
), t(\'change all flagged nodes to feedback mode\'));

$rule += array(
  \'#conditions\' => array($condition1, $condition2, $condition3, $condition4),
  \'#actions\' => array($action1),
);
rules_item_save(\'rules\', $feedback_mode_rule_name, $rule);
rules_clear_cache();
',
              'vars' => array(
                '0' => 'node',
              ),
              '#eval input' => array(
                'rules_input_evaluator_php' => array(
                  'code' => array(
                    '0' => 'node',
                  ),
                ),
              ),
            ),
            '#name' => 'rules_action_custom_php',
            '#info' => array(
              'label' => 'create feedback mode rule',
              'label callback' => FALSE,
              'module' => 'PHP',
              'eval input' => array(
                '0' => 'code',
              ),
            ),
            '#weight' => 0,
          ),
          '5' => array(
            '#weight' => 0,
            '#type' => 'action',
            '#settings' => array(
              'code' => '$newflagname = \'loopflag\'.$node->nid;
$viewid = db_result(db_query("SELECT vid FROM {views_view} WHERE name = \'%s\' ", $newflagname));
$circulation_mode_rule_name = \'circulation mode for \' . $newflagname;
$node_nid_token = \'<? echo html_entity_decode(\'&#91;node:nid&#93;\') ?>\';

$rule = array (
  \'#type\' => \'rule\',
  \'#set\' => \'event_node_update\',
  \'#label\' => \'circulation mode for \' . $newflagname,
  \'#active\' => 1,
  \'#weight\' => \'0\',
  \'#categories\' => array (\'workflow\'),
  \'#status\' => \'custom\',
);

$condition1 = rules_use_condition(\'rules_condition_text_compare\', array(
  \'#settings\' => array (
    \'text1\' => $node_nid_token,
    \'text2\' => $node->nid,
    \'regex\' => 0,
    \'#eval input\' => array (
      \'token_rules_input_evaluator\' => array (
        \'text1\' => array (
          0 => \'node\',
        ),
      ),
    ),
  ),
  \'#info\' => array (
    \'label\' => \'loop is \' . $newflagname,
    \'label callback\' => false,
      \'arguments\' => array (
        \'text1\' => array (
          \'label\' => \'Text 1\',
          \'type\' => \'string\',
        ),
        \'text2\' => array (
          \'label\' => \'Text 2\',
          \'type\' => \'string\',
        ),
      ),
    \'module\' => \'Rules\',
  ),
), t(\'loop is loop\'));

$condition2 = rules_use_condition(\'rules_condition_content_is_type\', array(
  \'#settings\' => array (
    \'type\' => array (\'loop\' => \'loop\'),
    \'#argument map\' => array (\'node\' => \'node\'),
  ),
  \'#info\' => array (
    \'label\' => \'Updated content is Loop\',
    \'arguments\' => array (
      \'node\' => array (
        \'type\' => \'node\',
        \'label\' => \'Content\',
      ),
    ),
    \'module\' => \'Node\',
  ),
), t(\'Updated content is loop\'));

$condition3 = rules_use_condition(\'content_rules_field_changed\', array(
  \'#settings\' => array (
    \'field_name\' => \'field_loop_mode\',
    \'#argument map\' => array (
      \'node\' => \'node\',
      \'node_unchanged\' => \'node_unchanged\',
    ),
  ),
  \'#info\' => array (
    \'label\' => \'Updated content\\\'s field \\\'field_loop_mode\\\' has been changed\',
    \'arguments\' => array (
      \'node\' => array (
        \'type\' => \'node\',
        \'label\' => \'Content containing changes\',
      ),
      \'node_unchanged\' => array (
        \'type\' => \'node\',
        \'label\' => \'Content not containing changes\',
      ),
    ),
    \'module\' => \'CCK\',
  ),
), t(\'Updated content\\\'s field \\\'field_loop_mode\\\' has been changed\'));

$condition4 = rules_use_condition(\'content_rules_field_has_value\', array(
  \'#settings\' => array (
    \'field_name\' => \'field_loop_mode\',
    \'#argument map\' => array (
      \'node\' => \'node\',
    ),
    \'value\' => array (
      0 => array (
        \'value\' => \'circulation\',
      ),
    ),
    \'code\' => \'\',
    \'vars\' => array (),
   ),
  \'#info\' => array (
    \'label\' => \'Loop mode changed to circulation\',
    \'label callback\' => false,
    \'arguments\' => array (
      \'node\' => array (
        \'type\' => \'node\',
        \'label\' => \'Content\',
      ),
    ),
    \'eval input\' => array (
      0 => \'code\',
      1 => \'value|0|value\',
    ),
    \'module\' => \'CCK\',
  ),
), t(\'Loop mode changed to circulation\'));

$action1 = rules_use_action(\'views_bulk_operations_rules_action_node\', array(
  \'#type\' => \'action\',
  \'#info\' => array (
    \'label\' => \'change all flagged nodes to circulation mode\',
    \'label callback\' => false,
    \'arguments\' => array (
      \'object\' => array (
        \'type\' => \'node\',
        \'label\' => \'Object\',
        \'description\' => \'The chosen object will be loaded as the <code>$object</code> variable, available below.\',
      ),
    ),
    \'module\' => \'Views Bulk Operations\',
    \'eval input\' => array (),
    \'base\' => \'views_bulk_operations_rules_action\',
  ),
  \'#settings\' => array (
    \'#argument map\' => array (
      \'object\' => \'node\',
    ),
    \'view_vid\' => $viewid,
    \'operation_key\' => \'views_bulk_operations_fields_action\',
    \'operation_arguments\' => \'\',
    \'view_exposed_input\' => \'\',
    \'view_arguments\' => \'\',
    \'field_text_notes\' => array (
      0 => array (
        \'value\' => \'oscillation
feedback
spin
circulation
loophole\',
        \'_error_element\' => \'field_text_notes][0][value\',
      ),
    ),
    \'field_text_notes_check\' => true,
    \'field_text_notes_add\' => false,
    \'#field_info\' => array (
      \'field_loop_mode\' => array (
        \'field_name\' => \'field_loop_mode\',
        \'type_name\' => \'loop\',
        \'display_settings\' => array (
          \'label\' => array (
            \'format\' => \'above\',
            \'exclude\' => 0,
          ),
          \'teaser\' => array (
            \'format\' => \'default\',
            \'exclude\' => 0,
          ),
          \'full\' => array (
            \'format\' => \'default\',
            \'exclude\' => 0,
          ),
          4 => array (
            \'format\' => \'default\',
            \'exclude\' => 0,
          ),
          \'token\' => array (
            \'format\' => \'default\',
            \'exclude\' => 0,
          ),
        ),
        \'widget_active\' => \'1\',
        \'type\' => \'text\',
        \'required\' => false,
        \'multiple\' => \'0\',
        \'db_storage\' => \'0\',
        \'module\' => \'text\',
        \'active\' => \'1\',
        \'locked\' => \'0\',
        \'columns\' => array (
          \'value\' => array (
            \'type\' => \'text\',
            \'size\' => \'big\',
            \'not null\' => false,
            \'sortable\' => true,
            \'views\' => true,
          ),
        ),
        \'text_processing\' => \'0\',
        \'max_length\' => \'\',
        \'allowed_values\' => \'oscillation
feedback
spin
circulation
loophole
\',
        \'allowed_values_php\' => \'\',
        \'widget\' => array (
          \'default_value\' => array (
            0 => array (
              \'value\' => \'oscillation\',
            ),
          ),
          \'default_value_php\' => NULL,
          \'label\' => \'Mode\',
          \'weight\' => \'32\',
          \'description\' => \'\',
          \'type\' => \'optionwidgets_select\',
          \'module\' => \'optionwidgets\',
        ),
      ),
    ),
    \'field_loop_mode\' => array (
      0 => array (
        \'value\' => \'circulation\',
      ),
    ),
    \'field_loop_mode_check\' => true,
    \'field_loop_mode_add\' => false,
  ),
), t(\'change all flagged nodes to circulation mode\'));

$rule += array(
  \'#conditions\' => array($condition1, $condition2, $condition3, $condition4),
  \'#actions\' => array($action1),
);
rules_item_save(\'rules\', $circulation_mode_rule_name, $rule);
rules_clear_cache();
',
              'vars' => array(
                '0' => 'node',
              ),
              '#eval input' => array(
                'rules_input_evaluator_php' => array(
                  'code' => array(
                    '0' => 'node',
                  ),
                ),
              ),
            ),
            '#name' => 'rules_action_custom_php',
            '#info' => array(
              'label' => 'create circulation mode rule',
              'label callback' => FALSE,
              'module' => 'PHP',
              'eval input' => array(
                '0' => 'code',
              ),
            ),
          ),
          '6' => array(
            '#info' => array(
              'label' => 'create oscillation mode rule',
              'label callback' => FALSE,
              'module' => 'PHP',
              'eval input' => array(
                '0' => 'code',
              ),
            ),
            '#name' => 'rules_action_custom_php',
            '#settings' => array(
              'code' => '$newflagname = \'loopflag\'.$node->nid;
$viewid = db_result(db_query("SELECT vid FROM {views_view} WHERE name = \'%s\' ", $newflagname));
$oscillation_mode_rule_name = \'oscillation mode for \' . $newflagname;
$node_nid_token = \'<? echo html_entity_decode(\'&#91;node:nid&#93;\') ?>\';

$rule = array (
  \'#type\' => \'rule\',
  \'#set\' => \'event_node_update\',
  \'#label\' => \'oscillation mode for \' . $newflagname,
  \'#active\' => 1,
  \'#weight\' => \'0\',
  \'#categories\' => array (\'workflow\'),
  \'#status\' => \'custom\',
);

$condition1 = rules_use_condition(\'rules_condition_text_compare\', array(
  \'#settings\' => array (
    \'text1\' => $node_nid_token,
    \'text2\' => $node->nid,
    \'regex\' => 0,
    \'#eval input\' => array (
      \'token_rules_input_evaluator\' => array (
        \'text1\' => array (
          0 => \'node\',
        ),
      ),
    ),
  ),
  \'#info\' => array (
    \'label\' => \'loop is \' . $newflagname,
    \'label callback\' => false,
      \'arguments\' => array (
        \'text1\' => array (
          \'label\' => \'Text 1\',
          \'type\' => \'string\',
        ),
        \'text2\' => array (
          \'label\' => \'Text 2\',
          \'type\' => \'string\',
        ),
      ),
    \'module\' => \'Rules\',
  ),
), t(\'loop is loop\'));

$condition2 = rules_use_condition(\'rules_condition_content_is_type\', array(
  \'#settings\' => array (
    \'type\' => array (\'loop\' => \'loop\'),
    \'#argument map\' => array (\'node\' => \'node\'),
  ),
  \'#info\' => array (
    \'label\' => \'Updated content is Loop\',
    \'arguments\' => array (
      \'node\' => array (
        \'type\' => \'node\',
        \'label\' => \'Content\',
      ),
    ),
    \'module\' => \'Node\',
  ),
), t(\'Updated content is loop\'));

$condition3 = rules_use_condition(\'content_rules_field_changed\', array(
  \'#settings\' => array (
    \'field_name\' => \'field_loop_mode\',
    \'#argument map\' => array (
      \'node\' => \'node\',
      \'node_unchanged\' => \'node_unchanged\',
    ),
  ),
  \'#info\' => array (
    \'label\' => \'Updated content\\\'s field \\\'field_loop_mode\\\' has been changed\',
    \'arguments\' => array (
      \'node\' => array (
        \'type\' => \'node\',
        \'label\' => \'Content containing changes\',
      ),
      \'node_unchanged\' => array (
        \'type\' => \'node\',
        \'label\' => \'Content not containing changes\',
      ),
    ),
    \'module\' => \'CCK\',
  ),
), t(\'Updated content\\\'s field \\\'field_loop_mode\\\' has been changed\'));

$condition4 = rules_use_condition(\'content_rules_field_has_value\', array(
  \'#settings\' => array (
    \'field_name\' => \'field_loop_mode\',
    \'#argument map\' => array (
      \'node\' => \'node\',
    ),
    \'value\' => array (
      0 => array (
        \'value\' => \'oscillation\',
      ),
    ),
    \'code\' => \'\',
    \'vars\' => array (),
   ),
  \'#info\' => array (
    \'label\' => \'Loop mode changed to oscillation\',
    \'label callback\' => false,
    \'arguments\' => array (
      \'node\' => array (
        \'type\' => \'node\',
        \'label\' => \'Content\',
      ),
    ),
    \'eval input\' => array (
      0 => \'code\',
      1 => \'value|0|value\',
    ),
    \'module\' => \'CCK\',
  ),
), t(\'Loop mode changed to oscillation\'));

$action1 = rules_use_action(\'views_bulk_operations_rules_action_node\', array(
  \'#type\' => \'action\',
  \'#info\' => array (
    \'label\' => \'change all flagged nodes to oscillation mode\',
    \'label callback\' => false,
    \'arguments\' => array (
      \'object\' => array (
        \'type\' => \'node\',
        \'label\' => \'Object\',
        \'description\' => \'The chosen object will be loaded as the <code>$object</code> variable, available below.\',
      ),
    ),
    \'module\' => \'Views Bulk Operations\',
    \'eval input\' => array (),
    \'base\' => \'views_bulk_operations_rules_action\',
  ),
  \'#settings\' => array (
    \'#argument map\' => array (
      \'object\' => \'node\',
    ),
    \'view_vid\' => $viewid,
    \'operation_key\' => \'views_bulk_operations_fields_action\',
    \'operation_arguments\' => \'\',
    \'view_exposed_input\' => \'\',
    \'view_arguments\' => \'\',
    \'field_text_notes\' => array (
      0 => array (
        \'value\' => \'oscillation
feedback
spin
circulation
loophole\',
        \'_error_element\' => \'field_text_notes][0][value\',
      ),
    ),
    \'field_text_notes_check\' => true,
    \'field_text_notes_add\' => false,
    \'#field_info\' => array (
      \'field_loop_mode\' => array (
        \'field_name\' => \'field_loop_mode\',
        \'type_name\' => \'loop\',
        \'display_settings\' => array (
          \'label\' => array (
            \'format\' => \'above\',
            \'exclude\' => 0,
          ),
          \'teaser\' => array (
            \'format\' => \'default\',
            \'exclude\' => 0,
          ),
          \'full\' => array (
            \'format\' => \'default\',
            \'exclude\' => 0,
          ),
          4 => array (
            \'format\' => \'default\',
            \'exclude\' => 0,
          ),
          \'token\' => array (
            \'format\' => \'default\',
            \'exclude\' => 0,
          ),
        ),
        \'widget_active\' => \'1\',
        \'type\' => \'text\',
        \'required\' => false,
        \'multiple\' => \'0\',
        \'db_storage\' => \'0\',
        \'module\' => \'text\',
        \'active\' => \'1\',
        \'locked\' => \'0\',
        \'columns\' => array (
          \'value\' => array (
            \'type\' => \'text\',
            \'size\' => \'big\',
            \'not null\' => false,
            \'sortable\' => true,
            \'views\' => true,
          ),
        ),
        \'text_processing\' => \'0\',
        \'max_length\' => \'\',
        \'allowed_values\' => \'oscillation
feedback
spin
circulation
loophole
\',
        \'allowed_values_php\' => \'\',
        \'widget\' => array (
          \'default_value\' => array (
            0 => array (
              \'value\' => \'oscillation\',
            ),
          ),
          \'default_value_php\' => NULL,
          \'label\' => \'Mode\',
          \'weight\' => \'32\',
          \'description\' => \'\',
          \'type\' => \'optionwidgets_select\',
          \'module\' => \'optionwidgets\',
        ),
      ),
    ),
    \'field_loop_mode\' => array (
      0 => array (
        \'value\' => \'oscillation\',
      ),
    ),
    \'field_loop_mode_check\' => true,
    \'field_loop_mode_add\' => false,
  ),
), t(\'change all flagged nodes to oscillation mode\'));

$rule += array(
  \'#conditions\' => array($condition1, $condition2, $condition3, $condition4),
  \'#actions\' => array($action1),
);
rules_item_save(\'rules\', $oscillation_mode_rule_name, $rule);
rules_clear_cache();
',
              'vars' => array(
                '0' => 'node',
              ),
              '#eval input' => array(
                'rules_input_evaluator_php' => array(
                  'code' => array(
                    '0' => 'node',
                  ),
                ),
              ),
            ),
            '#type' => 'action',
            '#weight' => 0,
          ),
          '7' => array(
            '#weight' => 0,
            '#type' => 'action',
            '#settings' => array(
              'code' => '$newflagname = \'loopflag\'.$node->nid;
$viewid = db_result(db_query("SELECT vid FROM {views_view} WHERE name = \'%s\' ", $newflagname));
$spin_mode_rule_name = \'spin mode for \' . $newflagname;
$node_nid_token = \'<? echo html_entity_decode(\'&#91;node:nid&#93;\') ?>\';

$rule = array (
  \'#type\' => \'rule\',
  \'#set\' => \'event_node_update\',
  \'#label\' => \'spin mode for \' . $newflagname,
  \'#active\' => 1,
  \'#weight\' => \'0\',
  \'#categories\' => array (\'workflow\'),
  \'#status\' => \'custom\',
);

$condition1 = rules_use_condition(\'rules_condition_text_compare\', array(
  \'#settings\' => array (
    \'text1\' => $node_nid_token,
    \'text2\' => $node->nid,
    \'regex\' => 0,
    \'#eval input\' => array (
      \'token_rules_input_evaluator\' => array (
        \'text1\' => array (
          0 => \'node\',
        ),
      ),
    ),
  ),
  \'#info\' => array (
    \'label\' => \'loop is \' . $newflagname,
    \'label callback\' => false,
      \'arguments\' => array (
        \'text1\' => array (
          \'label\' => \'Text 1\',
          \'type\' => \'string\',
        ),
        \'text2\' => array (
          \'label\' => \'Text 2\',
          \'type\' => \'string\',
        ),
      ),
    \'module\' => \'Rules\',
  ),
), t(\'loop is loop\'));

$condition2 = rules_use_condition(\'rules_condition_content_is_type\', array(
  \'#settings\' => array (
    \'type\' => array (\'loop\' => \'loop\'),
    \'#argument map\' => array (\'node\' => \'node\'),
  ),
  \'#info\' => array (
    \'label\' => \'Updated content is Loop\',
    \'arguments\' => array (
      \'node\' => array (
        \'type\' => \'node\',
        \'label\' => \'Content\',
      ),
    ),
    \'module\' => \'Node\',
  ),
), t(\'Updated content is loop\'));

$condition3 = rules_use_condition(\'content_rules_field_changed\', array(
  \'#settings\' => array (
    \'field_name\' => \'field_loop_mode\',
    \'#argument map\' => array (
      \'node\' => \'node\',
      \'node_unchanged\' => \'node_unchanged\',
    ),
  ),
  \'#info\' => array (
    \'label\' => \'Updated content\\\'s field \\\'field_loop_mode\\\' has been changed\',
    \'arguments\' => array (
      \'node\' => array (
        \'type\' => \'node\',
        \'label\' => \'Content containing changes\',
      ),
      \'node_unchanged\' => array (
        \'type\' => \'node\',
        \'label\' => \'Content not containing changes\',
      ),
    ),
    \'module\' => \'CCK\',
  ),
), t(\'Updated content\\\'s field \\\'field_loop_mode\\\' has been changed\'));

$condition4 = rules_use_condition(\'content_rules_field_has_value\', array(
  \'#settings\' => array (
    \'field_name\' => \'field_loop_mode\',
    \'#argument map\' => array (
      \'node\' => \'node\',
    ),
    \'value\' => array (
      0 => array (
        \'value\' => \'spin\',
      ),
    ),
    \'code\' => \'\',
    \'vars\' => array (),
   ),
  \'#info\' => array (
    \'label\' => \'Loop mode changed to spin\',
    \'label callback\' => false,
    \'arguments\' => array (
      \'node\' => array (
        \'type\' => \'node\',
        \'label\' => \'Content\',
      ),
    ),
    \'eval input\' => array (
      0 => \'code\',
      1 => \'value|0|value\',
    ),
    \'module\' => \'CCK\',
  ),
), t(\'Loop mode changed to spin\'));

$action1 = rules_use_action(\'views_bulk_operations_rules_action_node\', array(
  \'#type\' => \'action\',
  \'#info\' => array (
    \'label\' => \'change all flagged nodes to spin mode\',
    \'label callback\' => false,
    \'arguments\' => array (
      \'object\' => array (
        \'type\' => \'node\',
        \'label\' => \'Object\',
        \'description\' => \'The chosen object will be loaded as the <code>$object</code> variable, available below.\',
      ),
    ),
    \'module\' => \'Views Bulk Operations\',
    \'eval input\' => array (),
    \'base\' => \'views_bulk_operations_rules_action\',
  ),
  \'#settings\' => array (
    \'#argument map\' => array (
      \'object\' => \'node\',
    ),
    \'view_vid\' => $viewid,
    \'operation_key\' => \'views_bulk_operations_fields_action\',
    \'operation_arguments\' => \'\',
    \'view_exposed_input\' => \'\',
    \'view_arguments\' => \'\',
    \'field_text_notes\' => array (
      0 => array (
        \'value\' => \'oscillation
feedback
spin
circulation
loophole\',
        \'_error_element\' => \'field_text_notes][0][value\',
      ),
    ),
    \'field_text_notes_check\' => true,
    \'field_text_notes_add\' => false,
    \'#field_info\' => array (
      \'field_loop_mode\' => array (
        \'field_name\' => \'field_loop_mode\',
        \'type_name\' => \'loop\',
        \'display_settings\' => array (
          \'label\' => array (
            \'format\' => \'above\',
            \'exclude\' => 0,
          ),
          \'teaser\' => array (
            \'format\' => \'default\',
            \'exclude\' => 0,
          ),
          \'full\' => array (
            \'format\' => \'default\',
            \'exclude\' => 0,
          ),
          4 => array (
            \'format\' => \'default\',
            \'exclude\' => 0,
          ),
          \'token\' => array (
            \'format\' => \'default\',
            \'exclude\' => 0,
          ),
        ),
        \'widget_active\' => \'1\',
        \'type\' => \'text\',
        \'required\' => false,
        \'multiple\' => \'0\',
        \'db_storage\' => \'0\',
        \'module\' => \'text\',
        \'active\' => \'1\',
        \'locked\' => \'0\',
        \'columns\' => array (
          \'value\' => array (
            \'type\' => \'text\',
            \'size\' => \'big\',
            \'not null\' => false,
            \'sortable\' => true,
            \'views\' => true,
          ),
        ),
        \'text_processing\' => \'0\',
        \'max_length\' => \'\',
        \'allowed_values\' => \'oscillation
feedback
spin
circulation
loophole
\',
        \'allowed_values_php\' => \'\',
        \'widget\' => array (
          \'default_value\' => array (
            0 => array (
              \'value\' => \'spin\',
            ),
          ),
          \'default_value_php\' => NULL,
          \'label\' => \'Mode\',
          \'weight\' => \'32\',
          \'description\' => \'\',
          \'type\' => \'optionwidgets_select\',
          \'module\' => \'optionwidgets\',
        ),
      ),
    ),
    \'field_loop_mode\' => array (
      0 => array (
        \'value\' => \'spin\',
      ),
    ),
    \'field_loop_mode_check\' => true,
    \'field_loop_mode_add\' => false,
  ),
), t(\'change all flagged nodes to spin mode\'));

$rule += array(
  \'#conditions\' => array($condition1, $condition2, $condition3, $condition4),
  \'#actions\' => array($action1),
);
rules_item_save(\'rules\', $spin_mode_rule_name, $rule);
rules_clear_cache();
',
              'vars' => array(
                '0' => 'node',
              ),
              '#eval input' => array(
                'rules_input_evaluator_php' => array(
                  'code' => array(
                    '0' => 'node',
                  ),
                ),
              ),
            ),
            '#name' => 'rules_action_custom_php',
            '#info' => array(
              'label' => 'create spin mode rule',
              'label callback' => FALSE,
              'module' => 'PHP',
              'eval input' => array(
                '0' => 'code',
              ),
            ),
          ),
        ),
        '#version' => 6003,
      ),
      'flag_collections_rules_2' => array(
        '#type' => 'rule',
        '#set' => 'event_node_delete',
        '#label' => 'delete loop rule',
        '#active' => 1,
        '#weight' => '0',
        '#categories' => array(
          '0' => 'core',
          'flag_collections_rules' => 'flag_collections_rules',
        ),
        '#status' => 'default',
        '#conditions' => array(
          '0' => array(
            '#weight' => 0,
            '#type' => 'condition',
            '#settings' => array(
              'type' => array(
                'loop' => 'loop',
              ),
              '#argument map' => array(
                'node' => 'node',
              ),
            ),
            '#name' => 'rules_condition_content_is_type',
            '#info' => array(
              'label' => 'Content is loop',
              'label callback' => FALSE,
              'arguments' => array(
                'node' => array(
                  'type' => 'node',
                  'label' => 'Content',
                ),
              ),
              'module' => 'Node',
            ),
          ),
        ),
        '#actions' => array(
          '0' => array(
            '#weight' => 0,
            '#info' => array(
              'label' => 'delete flag, rules and view',
              'label callback' => FALSE,
              'module' => 'PHP',
              'eval input' => array(
                '0' => 'code',
              ),
            ),
            '#name' => 'rules_action_custom_php',
            '#settings' => array(
              'code' => '//on loop delete do:






//variables

$newflagname = \'loopflag\'.$node->nid;
$newflagtitle = $node->title;
$text_flagged_rule_name = \'add_to_\' . $newflagname . \'_rule\';
$text_redirect_rule_name = \'redirect content in \' . $newflagname;
$feedback_mode_rule_name = \'feedback mode for \' . $newflagname;
$oscillation_mode_rule_name = \'oscillation mode for \' . $newflagname;
$circulation_mode_rule_name = \'circulation mode for \' . $newflagname;
$spin_mode_rule_name = \'spin mode for \' . $newflagname;




//load flag and get fid
$flag = flag_get_flag($newflagname);

//delete flags
db_query("DELETE FROM {flag_content} WHERE fid = %d", $flag->fid);
db_query("DELETE FROM {flag_counts} WHERE fid = %d", $flag->fid);
db_query("DELETE FROM {flag_types} WHERE fid = %d", $flag->fid);
db_query("DELETE FROM {flags} WHERE fid = %d", $flag->fid);
unset($flag);



//delete rules
db_query("DELETE FROM {rules_rules} WHERE name = \'%s\'", $text_flagged_rule_name);
db_query("DELETE FROM {rules_rules} WHERE name = \'%s\'", $text_redirect_rule_name);
db_query("DELETE FROM {rules_rules} WHERE name = \'%s\'", $feedback_mode_rule_name);
db_query("DELETE FROM {rules_rules} WHERE name = \'%s\'", $oscillation_mode_rule_name);
db_query("DELETE FROM {rules_rules} WHERE name = \'%s\'", $circulation_mode_rule_name);
db_query("DELETE FROM {rules_rules} WHERE name = \'%s\'", $spin_mode_rule_name);


//delete views
$view = views_get_view($newflagname);
$view->delete();
views_object_cache_clear(\'view\', $newflagname);

menu_rebuild();
unset($view);

',
              'vars' => array(
                '0' => 'node',
              ),
            ),
            '#type' => 'action',
          ),
        ),
        '#version' => 6003,
      ),
      'flag_collections_rules_4' => array(
        '#type' => 'rule',
        '#set' => 'event_node_update',
        '#label' => 'Task completed',
        '#active' => 1,
        '#weight' => '0',
        '#categories' => array(
          '0' => 'core',
          '1' => 'flag_collections_rules',
        ),
        '#status' => 'default',
        '#conditions' => array(
          '0' => array(
            '#type' => 'condition',
            '#settings' => array(
              'type' => array(
                'task' => 'task',
              ),
              '#argument map' => array(
                'node' => 'node',
              ),
            ),
            '#name' => 'rules_condition_content_is_type',
            '#info' => array(
              'label' => 'Updated content is Task',
              'label callback' => FALSE,
              'arguments' => array(
                'node' => array(
                  'type' => 'node',
                  'label' => 'Content',
                ),
              ),
              'module' => 'Node',
            ),
            '#weight' => 0,
          ),
          '1' => array(
            '#weight' => 0,
            '#info' => array(
              'label' => 'Updated content\'s field \'field_task_completed\' has been changed',
              'label callback' => FALSE,
              'arguments' => array(
                'node' => array(
                  'type' => 'node',
                  'label' => 'Content containing changes',
                ),
                'node_unchanged' => array(
                  'type' => 'node',
                  'label' => 'Content not containing changes',
                ),
              ),
              'module' => 'CCK',
            ),
            '#name' => 'content_rules_field_changed',
            '#settings' => array(
              'field_name' => 'field_task_completed',
              '#argument map' => array(
                'node' => 'node',
                'node_unchanged' => 'node_unchanged',
              ),
            ),
            '#type' => 'condition',
          ),
          '2' => array(
            '#type' => 'condition',
            '#settings' => array(
              'field_name' => 'field_task_completed',
              '#argument map' => array(
                'node' => 'node',
              ),
              'value' => array(
                '0' => array(
                  'value' => 'complete',
                ),
              ),
              'code' => '',
              'vars' => array(),
            ),
            '#name' => 'content_rules_field_has_value',
            '#info' => array(
              'label' => 'Updated content\'s field \'field_task_completed\' has value',
              'label callback' => FALSE,
              'arguments' => array(
                'node' => array(
                  'type' => 'node',
                  'label' => 'Content',
                ),
              ),
              'eval input' => array(
                '0' => 'code',
                '1' => 'value|0|value',
              ),
              'module' => 'CCK',
            ),
            '#weight' => 0,
          ),
        ),
        '#actions' => array(
          '0' => array(
            '#weight' => 0,
            '#info' => array(
              'label' => 'Populate saved content\'s field \'field_task_date_complete\'',
              'arguments' => array(
                'node' => array(
                  'type' => 'node',
                  'label' => 'Content',
                ),
              ),
              'eval input' => array(
                '0' => 'code',
              ),
              'module' => 'CCK',
            ),
            '#name' => 'content_rules_action_populate_field',
            '#settings' => array(
              'field_name' => 'field_task_date_complete',
              '#argument map' => array(
                'node' => 'node',
              ),
              'value' => array(
                '0' => array(
                  'value' => NULL,
                  'value2' => NULL,
                  'timezone' => NULL,
                  'offset' => NULL,
                  'offset2' => NULL,
                  'rrule' => NULL,
                ),
              ),
              'code' => '$timestamp = time();
return array (
0=> array (\'value\' => $timestamp), 
);',
              'vars' => array(),
            ),
            '#type' => 'action',
          ),
        ),
        '#version' => 6003,
      ),
      'flag_collections_rules_3' => array(
        '#type' => 'rule',
        '#set' => 'event_node_view',
        '#label' => 'redirect loop',
        '#active' => 1,
        '#weight' => '0',
        '#categories' => array(
          '0' => 'core',
          'flag_collections_rules' => 'flag_collections_rules',
        ),
        '#status' => 'default',
        '#conditions' => array(
          '0' => array(
            '#type' => 'condition',
            '#settings' => array(
              'type' => array(
                'loop' => 'loop',
              ),
              '#argument map' => array(
                'node' => 'node',
              ),
            ),
            '#name' => 'rules_condition_content_is_type',
            '#info' => array(
              'label' => 'Viewed content is Loop',
              'arguments' => array(
                'node' => array(
                  'type' => 'node',
                  'label' => 'Content',
                ),
              ),
              'module' => 'Node',
            ),
            '#weight' => 0,
          ),
        ),
        '#actions' => array(
          '0' => array(
            '#info' => array(
              'label' => 'Page redirect',
              'module' => 'System',
              'eval input' => array(
                '0' => 'path',
                '1' => 'query',
                '2' => 'fragment',
              ),
            ),
            '#name' => 'rules_action_drupal_goto',
            '#settings' => array(
              'path' => '[node:field_loop_section-formatted]/[node:nid]',
              'query' => '',
              'fragment' => '',
              'force' => 1,
              'immediate' => 0,
              '#eval input' => array(
                'token_rules_input_evaluator' => array(
                  'path' => array(
                    '0' => 'node',
                  ),
                ),
              ),
            ),
            '#type' => 'action',
            '#weight' => 0,
          ),
        ),
        '#version' => 6003,
      ),
    ),
  );
}
